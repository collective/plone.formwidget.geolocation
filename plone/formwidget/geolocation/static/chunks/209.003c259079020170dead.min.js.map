{"version":3,"file":"chunks/209.003c259079020170dead.min.js","mappings":"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","sources":["webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/basepattern.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/pat-leaflet/src/leaflet.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/utils.js"],"sourcesContent":["/**\n * A Base pattern for creating scoped patterns.\n *\n * Each instance of a pattern has its own local scope.\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * For usage, see basepattern.md\n */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst log = logging.getLogger(\"basepattern\");\n\nclass BasePattern {\n    static name; // name of pattern used in Registry.\n    static trigger; // A CSS selector to match elements that should trigger the pattern instantiation.\n    static parser; // Options parser.\n\n    // Parser options\n    parser_group_options = true;\n    parser_multiple = undefined;\n    parser_inherit = true;\n\n    constructor(el, options = {}) {\n        // Make static variables available on instance.\n        this.name = this.constructor.name;\n        this.trigger = this.constructor.trigger;\n        this.parser = this.constructor.parser;\n\n        if (!el) {\n            log.warn(`No element given to pattern ${this.name}.`);\n            return;\n        }\n        if (el.jquery) {\n            el = el[0];\n        }\n        this.el = el;\n\n        // Notify pre-init\n        this.el.dispatchEvent(\n            new Event(`pre-init.${this.name}.patterns`, {\n                bubbles: true,\n                cancelable: true,\n            })\n        );\n\n        // Initialize asynchronously.\n        //\n        // 1) We need to call the concrete implementation of ``init``, but the\n        //    inheritance chain is not yet set up and ``init`` not available.\n        //\n        // 2) We want to wait for the init() to successfuly finish and fire an\n        //    event then.\n        //    But the constructer cannot not return a Promise, thus not be\n        //    asynchronous but only return itself.\n        //\n        // Both limitations are gone in next tick.\n        //\n        window.setTimeout(async () => {\n            if (typeof this.el[`pattern-${this.name}`] !== \"undefined\") {\n                // Do not reinstantiate\n                log.debug(`Not reinstatiating the pattern ${this.name}.`, this.el);\n\n                // Notify that not instantiated\n                this.el.dispatchEvent(\n                    new Event(`not-init.${this.name}.patterns`, {\n                        bubbles: true,\n                        cancelable: false,\n                    })\n                );\n                return;\n            }\n\n            // Create the options object by parsing the element and using the\n            // optional options as default.\n            this.options =\n                this.parser?.parse(\n                    this.el,\n                    options,\n                    this.parser_multiple,\n                    this.parser_inherit,\n                    this.parser_group_options\n                ) ?? options;\n\n            // Store pattern instance on element\n            this.el[`pattern-${this.name}`] = this;\n\n            // Initialize the pattern\n            await this.init();\n\n            // Notify that now ready\n            this.el.dispatchEvent(\n                new Event(`init.${this.name}.patterns`, {\n                    bubbles: true,\n                    cancelable: true,\n                })\n            );\n        }, 0);\n    }\n\n    async init() {\n        // Extend this method in your pattern.\n    }\n\n    /**\n     * Listen to an event on the element only once.\n     *\n     * @param {string} event_name - Name of the event to listen to.\n     * @param {function} callback - Callback to call when the event is thrown.\n     */\n    one(event_name, event_callback) {\n        events.add_event_listener(\n            this.el,\n            `${event_name}.${this.name}.patterns`,\n            `basepattern-one--${event_name}.${this.name}.patterns`,\n            event_callback,\n            {\n                once: true,\n            }\n        );\n    }\n\n    /**\n     * Destroy/remove/unload the pattern from the element.\n     */\n    destroy() {\n        delete this.el[`pattern-${this.name}`];\n    }\n}\n\nexport default BasePattern;\nexport { BasePattern };\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw (\n                'Attempted to add an alias \"' +\n                alias +\n                '\" for a non-existing parser argument \"' +\n                original +\n                '\".'\n            );\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to boolean\";\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw \"Cannot convert value for \" + name + \" to number\";\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to number\";\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw (\n                            \"Do not know how to convert value for \" +\n                            name +\n                            \" to \" +\n                            spec.type\n                        );\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(\"Illegal value for \" + name + \": \" + value);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(\"Ignoring value for unknown argument \" + name);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(\"Invalid parameter: \" + part + \": \" + argstring);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(\"Unknown named parameter \" + matches[1]);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(\"Ignore extra arguments: \" + parts.join(\" \"));\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch (e) {\n                this.log.warn(\"Invalid JSON argument found: \" + parameter);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters)\n            if (typeof this.parameters[name].value === \"function\")\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch (e) {\n                    this.log.error(\"Default function for \" + name + \" failed.\");\n                }\n            else result[name] = this.parameters[name].value;\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) continue;\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            )\n                options[name] = options[spec.value.slice(1)];\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) continue;\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\")\n                        options[spec.group] = {};\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el\n                .parents(\"[\" + this.attribute + \"]\")\n                .addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","import $ from \"jquery\";\nimport { BasePattern } from \"@patternslib/patternslib/src/core/basepattern\";\nimport Parser from \"@patternslib/patternslib/src/core/parser\";\nimport events from \"@patternslib/patternslib/src/core/events\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\nimport registry from \"@patternslib/patternslib/src/core/registry\";\n\nconst log = logging.getLogger(\"pat-leaflet\");\nlog.debug(\"pattern loaded\");\n\nexport const parser = new Parser(\"leaflet\");\n\n// TODO: Follow Patternslib conventions and rename to NAME-SUBNAME-SUBSUBNAME style names.\nparser.addArgument(\"latitude\", \"0.0\");\nparser.addArgument(\"longitude\", \"0.0\");\nparser.addArgument(\"zoom\", \"auto\");\n\nparser.addArgument(\"maxClusterRadius\", \"80\");\n\nparser.addArgument(\"boundsPadding\", \"20\");\n\n// default controls\nparser.addArgument(\"fullscreencontrol\", true);\nparser.addArgument(\"zoomcontrol\", true);\n\n// disabled controls\nparser.addArgument(\"addmarker\", false);\nparser.addArgument(\"autolocate\", false);\nparser.addArgument(\"geosearch\", false);\nparser.addArgument(\"geosearch_provider\", \"openstreetmap\");\nparser.addArgument(\"locatecontrol\", false);\nparser.addArgument(\"minimap\", false);\n\n// map layers\nparser.addArgument(\"default_map_layer\", { id: \"OpenStreetMap.Mapnik\", options: {} });\nparser.addArgument(\"map_layers\", [\n    { title: \"Map\", id: \"OpenStreetMap.Mapnik\", options: {} },\n    { title: \"Satellite\", id: \"Esri.WorldImagery\", options: {} },\n    { title: \"Topographic\", id: \"OpenTopoMap\", options: {} },\n    { title: \"Toner\", id: \"Stamen.Toner\", options: {} },\n]);\n\nparser.addArgument(\"image_path\", \"node_modules/leaflet.awesome-markers/dist/images\");\n\n// fetch geojson data via AJAX url\nparser.addArgument(\"geojson_ajaxurl\", \"\");\n\nclass Pattern extends BasePattern {\n    static name = \"leaflet\";\n    static trigger = \".pat-leaflet\";\n    static parser = parser;\n    map = null;\n\n    async init() {\n        import(\"./leaflet.scss\");\n\n        this.L = (await import(\"leaflet\")).default;\n        const LMarkerClusterGroup = (await import(\"leaflet.markercluster\")).MarkerClusterGroup; // prettier-ignore\n\n        await import(\"leaflet-providers\");\n        await import(\"leaflet-sleep\");\n        await import(\"leaflet.awesome-markers\");\n        await import(\"leaflet.fullscreen\");\n\n        const options = (this.options = parser.parse(this.el));\n\n        const fitBoundsOptions = (this.fitBoundsOptions = {\n            maxZoom: options.zoom,\n            padding: [parseInt(options.boundsPadding), parseInt(options.boundsPadding)],\n        });\n\n        this.main_marker = null;\n\n        // MAP INIT\n        const map = (this.map = this.L.map(this.el, {\n            fullscreenControl: options.fullscreencontrol,\n            zoomControl: options.zoomcontrol,\n            // Leaflet.Sleep options\n            sleep: true,\n            sleepNote: false,\n            hoverToWake: false,\n            sleepOpacity: 1,\n        }));\n\n        const marker_cluster = (this.marker_cluster = new LMarkerClusterGroup({\n            maxClusterRadius: this.options.maxClusterRadius,\n        }));\n\n        // hand over some map events to the element\n        map.on(\"moveend zoomend\", (e) => {\n            // TODO: Change to native event for next major version.\n            $(this.el).trigger(`leaflet.${e.type}`, { original_event: e });\n        });\n\n        this.L.Icon.Default.imagePath = options.image_path;\n\n        // Locatecontrol\n        if (options.locatecontrol || options.autolocate) {\n            await import(\"leaflet.locatecontrol\");\n            const locatecontrol = this.L.control.locate().addTo(map);\n            if (options.autolocate) {\n                locatecontrol.start();\n            }\n        }\n\n        // Layers\n        // Must be an array\n        if (Array.isArray(options.map_layers)) {\n            const baseLayers = {};\n\n            // Convert map_layers elements from string to objects, if necesarry\n            options.map_layers = options.map_layers.map(function (it) {\n                if (typeof it == \"string\") {\n                    it = { id: it, title: it, options: {} };\n                }\n                return it;\n            });\n            for (const layer of options.map_layers) {\n                // build layers object with tileLayer instances\n                baseLayers[layer.title] = this.L.tileLayer.provider(\n                    layer.id,\n                    layer.options\n                );\n            }\n            if (options.map_layers.length > 1) {\n                this.L.control.layers(baseLayers).addTo(map);\n            }\n        }\n\n        if (typeof options.default_map_layer == \"string\") {\n            options.default_map_layer = { id: options.default_map_layer, options: {} };\n        }\n        this.L.tileLayer\n            .provider(options.default_map_layer.id, options.default_map_layer.options)\n            .addTo(map);\n        if (options.zoom === \"auto\") {\n            map.setView([options.latitude, options.longitude], 14);\n        } else {\n            map.setView([options.latitude, options.longitude], options.zoom);\n        }\n\n        // ADD MARKERS\n        if (options.geojson_ajaxurl !== \"\") {\n            let response;\n            try {\n                response = await fetch(options.geojson_ajaxurl);\n                const data = await response.json();\n                this.init_geojson(map, data);\n            } catch (e) {\n                log.info(\n                    `Could not load geojson data from url ${options.geojson_ajaxurl}`\n                );\n                return;\n            }\n        } else if (this.el.dataset.geojson) {\n            try {\n                // inject inline geoJSON data object\n                this.init_geojson(map, JSON.parse(this.el.dataset.geojson));\n            } catch (e) {\n                log.info(\"Could not parse geojson data.\");\n                return;\n            }\n        }\n\n        if (options.geosearch) {\n            const { GeoSearchControl } = await import(\"leaflet-geosearch\");\n\n            let SearchProvider;\n            if (options.geosearch_provider === \"esri\") {\n                SearchProvider = (await import(\"leaflet-geosearch\")).EsriProvider;\n            } else if (options.geosearch_provider === \"google\") {\n                SearchProvider = (await import(\"leaflet-geosearch\")).GoogleProvider;\n            } else if (options.geosearch_provider === \"bing\") {\n                SearchProvider = (await import(\"leaflet-geosearch\")).BingProvider;\n            } else {\n                SearchProvider = (await import(\"leaflet-geosearch\")).OpenStreetMapProvider; // prettier-ignore\n            }\n\n            // GEOSEARCH\n            const geosearch = new GeoSearchControl({\n                showMarker: this.main_marker === null,\n                provider: new SearchProvider(),\n            });\n            map.addControl(geosearch);\n\n            map.on(\"geosearch/showlocation\", (e) => {\n                const latlng = { lat: e.location.y, lng: e.location.x };\n                if (this.main_marker && this.main_marker.feature.properties.editable) {\n                    // update main_marker from geojson object\n                    this.marker_cluster.removeLayer(this.main_marker);\n                    this.main_marker.setLatLng(latlng).update();\n                    this.marker_cluster.addLayer(this.main_marker);\n                } else {\n                    e.marker.setIcon(this.create_marker(\"red\"));\n                    this.bind_popup(\n                        { properties: { editable: true, popup: e.location.label } },\n                        e.marker\n                    );\n                    marker_cluster.addLayer(e.marker);\n                }\n                // fit to window\n                map.fitBounds([latlng], fitBoundsOptions);\n            });\n        }\n\n        if (options.addmarker) {\n            await import(\"leaflet.simplemarkers/lib/Control.SimpleMarkers\");\n\n            const add_marker_callback = function (marker) {\n                this.bind_popup({ properties: { editable: true } }, marker);\n            };\n            const addmarker = new this.L.Control.SimpleMarkers({\n                delete_control: false,\n                allow_popup: false,\n                marker_icon: this.create_marker(\"red\"),\n                marker_draggable: true,\n                add_marker_callback: add_marker_callback.bind(this),\n            });\n            map.addControl(addmarker);\n        }\n\n        // Minimap\n        if (options.minimap) {\n            await import(\"leaflet-minimap\");\n            const minimap = new this.L.Control.MiniMap(\n                this.L.tileLayer.provider(\n                    options.default_map_layer.id,\n                    options.default_map_layer.options\n                ),\n                { toggleDisplay: true, mapOptions: { sleep: false } }\n            );\n            map.addControl(minimap);\n        }\n\n        log.debug(\"pattern initialized\");\n    }\n\n    init_geojson(map, geojson) {\n        let bounds;\n        const marker_layer = this.L.geoJson(geojson, {\n            pointToLayer: (feature, latlng) => {\n                const extraClasses = feature.properties.extraClasses || \"\";\n                let markerColor = \"green\";\n                if (feature.properties.color) {\n                    markerColor = feature.properties.color;\n                } else if (!this.main_marker || feature.properties.main) {\n                    markerColor = \"red\";\n                }\n                const marker_icon = this.create_marker(markerColor, extraClasses);\n                const marker = new this.L.Marker(latlng, {\n                    icon: marker_icon,\n                    draggable: feature.properties.editable,\n                });\n                if (!this.main_marker || feature.properties.main) {\n                    // Set main marker. This is the one, which is used\n                    // for setting the search result marker.\n                    this.main_marker = marker;\n                }\n\n                const input_lat = document.querySelector(feature.properties.latinput);\n                const input_lng = document.querySelector(feature.properties.lnginput);\n\n                marker.on(\"dragend move\", (e) => {\n                    // UPDATE INPUTS ON MARKER MOVE\n                    const latlng = e.target.getLatLng();\n                    if (input_lat) {\n                        input_lat.value = latlng.lat;\n                    }\n                    if (input_lng) {\n                        input_lng.value = latlng.lng;\n                    }\n                });\n                if (input_lat) {\n                    // UPDATE MARKER ON LATITUDE CHANGE\n                    events.add_event_listener(\n                        input_lat,\n                        \"input\",\n                        \"pat-leaflet--input_lat\",\n                        (e) => {\n                            const latlng = marker.getLatLng();\n                            this.marker_cluster.removeLayer(marker);\n                            marker\n                                .setLatLng({ lat: e.target.value, lng: latlng.lng })\n                                .update();\n                            this.marker_cluster.addLayer(marker);\n                            // fit bounds\n                            bounds = this.marker_cluster.getBounds();\n                            map.fitBounds(bounds, this.fitBoundsOptions);\n                        }\n                    );\n                }\n                if (input_lng) {\n                    // UPDATE MARKER ON LONGITUDE CHANGE\n                    events.add_event_listener(\n                        input_lng,\n                        \"input\",\n                        \"pat-leaflet--input_lng\",\n                        (e) => {\n                            const latlng = marker.getLatLng();\n                            this.marker_cluster.removeLayer(marker);\n                            marker\n                                .setLatLng({ lat: latlng.lat, lng: e.target.value })\n                                .update();\n                            this.marker_cluster.addLayer(marker);\n                            // fit bounds\n                            bounds = this.marker_cluster.getBounds();\n                            map.fitBounds(bounds, this.fitBoundsOptions);\n                        }\n                    );\n                }\n                return marker;\n            },\n            onEachFeature: this.bind_popup.bind(this),\n        });\n        this.marker_cluster.addLayer(marker_layer);\n        map.addLayer(this.marker_cluster);\n\n        // autozoom\n        if (this.options.zoom === \"auto\") {\n            bounds = this.marker_cluster.getBounds();\n            map.fitBounds(bounds, this.fitBoundsOptions);\n        }\n        \n    }\n\n    bind_popup(feature, marker) {\n        const popup = feature.properties.popup || \"\";\n        if (feature.properties.editable && !feature.properties.no_delete) {\n            // for editable markers add \"delete marker\" link to popup\n            const popup_el = document.createElement(\"div\");\n            popup_el.innerHTML = `\n              <div>${popup}</div>\n              <br/>\n              <button type=\"button\" class=\"delete-marker\">Delete marker</button>\n            `;\n\n            // delete marker\n            popup_el.querySelector(\".delete-marker\").addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                this.map.removeLayer(marker);\n                marker = undefined;\n            });\n            marker.bindPopup(popup_el);\n        } else if (popup) {\n            marker.bindPopup(popup);\n        }\n    }\n\n    create_marker(color, extraClasses) {\n        color = color || \"red\";\n        extraClasses = extraClasses || \"\";\n        return this.L.AwesomeMarkers.icon({\n            markerColor: color,\n            prefix: \"fa\",\n            icon: \"circle\",\n            extraClasses: extraClasses,\n        });\n    }\n}\n\nregistry.register(Pattern);\n\nexport default Pattern;\nexport { Pattern };\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\nimport logging from \"./logging\";\n\nconst logger = logging.getLogger(\"core dom\");\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * The element to be wrapped will be moved into the wrapper element and the\n * wrapper element is placed just before the old element was.\n *\n * @param {Node} el - The DOM node to wrap.\n * @param {Node} wrapper - The wrapper element.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Test, if a element is visible or not.\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is visible.\n */\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Test, if a element is a input-type element.\n *\n * This is taken from Sizzle/jQuery at:\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L139\n * https://github.com/jquery/sizzle/blob/f2a2412e5e8a5d9edf168ae3b6633ac8e6bd9f2e/src/sizzle.js#L1773\n *\n * @param {Node} el - The DOM node to test.\n * @returns {Boolean} - True if the element is a input-type element.\n */\nconst is_input = (el) => {\n    const re_input = /^(?:input|select|textarea|button)$/i;\n    return re_input.test(el.nodeName);\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {Node} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get the horizontal scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The horizontal scroll position.\n */\nconst get_scroll_x = (scroll_reference) => {\n    // scroll_listener == window: window.scrollX\n    // scroll_listener == html: html.scrollLeft == window.scrollX\n    // scroll_listener == DOM node: node.scrollLeft\n    return typeof scroll_reference.scrollLeft !== \"undefined\"\n        ? scroll_reference.scrollLeft\n        : scroll_reference.scrollX;\n};\n\n/**\n * Get the vertical scroll position.\n *\n * @param {Node} scroll_reference - The element to get the scroll position from.\n *\n * @returns {number} The vertical scroll position.\n */\nconst get_scroll_y = (scroll_reference) => {\n    // scroll_listener == window: window.scrollY\n    // scroll_listener == html: html.scrollTop == window.scrollY\n    // scroll_listener == DOM node: node.scrollTop\n    return typeof scroll_reference.scrollTop !== \"undefined\"\n        ? scroll_reference.scrollTop\n        : scroll_reference.scrollY;\n};\n\n/**\n * Get the elements position relative to another element.\n *\n * @param {Node} el - The DOM element to get the position for.\n * @param {Node} [reference_el=document.body] - The DOM element to get the position relative to.\n *\n * @returns {{top: number, left: number}} - The position of the element relative to the other element.\n */\nconst get_relative_position = (el, reference_el = document.body) => {\n    // Get the reference element to which against we calculate\n    // the relative position of the target.\n    // In case of a scroll container of window, we do not have\n    // getBoundingClientRect method, so get the body instead.\n    if (reference_el === window) {\n        reference_el = document.body;\n    }\n\n    // Calculate absolute [¹] position difference between\n    // scroll_container and scroll_target.\n    // Substract the container's border from the scrolling\n    // value, as this one isn't respected by\n    // getBoundingClientRect [²] and would lead to covered\n    // items [³].\n    // ¹) so that it doesn't make a difference, if the element\n    // is below or above the scrolling container. We just need\n    // to know the absolute difference.\n    // ²) Calculations are based from the viewport.\n    // ³) See:\n    //      https://docs.microsoft.com/en-us/previous-versions//hh781509(v=vs.85)\n    //      https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const left = Math.abs(\n        el.getBoundingClientRect().left +\n            reference_el.scrollLeft -\n            reference_el.getBoundingClientRect().left -\n            dom.get_css_value(reference_el, \"border-left-width\", true)\n    );\n    const top = Math.abs(\n        el.getBoundingClientRect().top +\n            reference_el.scrollTop -\n            reference_el.getBoundingClientRect().top -\n            dom.get_css_value(reference_el, \"border-top-width\", true)\n    );\n\n    return { top, left };\n};\n\n/**\n * Scroll to a given element.\n * The element will be scrolled to the top of the scroll container.\n *\n * @param {Node} el - The element which should be scrolled to.\n * @param {Node} scroll_container - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n * @param {string} [direction=\"top\"] - The direction to scroll to. Can be either \"top\", \"left\" or \"both\".\n */\nconst scroll_to_element = (el, scroll_container, offset = 0, direction = \"top\") => {\n    // Get the position of the element relative to the scroll container.\n    const position = get_relative_position(el, scroll_container);\n\n    const options = { behavior: \"auto\" };\n    if (direction === \"top\" || direction === \"both\") {\n        options.top = position.top - offset;\n    }\n    if (direction === \"left\" || direction === \"both\") {\n        options.left = position.left - offset;\n    }\n\n    // Scroll to the target position.\n    scroll_container.scrollTo(options);\n};\n\n/**\n * Scroll to the top of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_top = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    scroll_container.scrollTo({ top: 0 - offset, behavior: \"auto\" });\n};\n\n/**\n * Scroll to the bottom of a scrolling container.\n *\n * @param {Node} [scroll_container = document.body] - The element which is scrollable.\n * @param {number} [offset=0] - Optional offset in pixels to stop scrolling before the target position. Can also be a negative number.\n */\nconst scroll_to_bottom = (scroll_container = document.body, offset = 0) => {\n    // Just scroll up, period.\n    //\n    const top = (scroll_container === window ? document.body : scroll_container)\n        .scrollHeight;\n    scroll_container.scrollTo({ top: top - offset, behavior: \"auto\" });\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Delete a variable from the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to delete the variable from.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n */\nconst delete_data = (el, name) => {\n    delete el[`${DATA_PREFIX}${name}`];\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * NOTE: This uses eval and would break if Content-Security-Policy does not\n *       allow 'unsafe-eval'.\n *       Because of this CSR problem the use of this method is not recommended.\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    logger.warn(\n        \"Using dom.template is not recommended due to a problem with Content-Security-Policy.\"\n    );\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\n/**\n * Get the visible ratio of an element compared to container.\n * If no container is given, the viewport is used.\n *\n * Note: currently only vertical ratio is supported.\n *\n * @param {Node} el - The element to get the visible ratio from.\n * @param {Node} [container] - The container to compare the element to.\n * @returns {number} - The visible ratio of the element.\n *                    0 means the element is not visible.\n *                    1 means the element is fully visible.\n */\nconst get_visible_ratio = (el, container) => {\n    if (!el) {\n        return 0;\n    }\n\n    const rect = el.getBoundingClientRect();\n    const container_rect =\n        container !== window\n            ? container.getBoundingClientRect()\n            : {\n                  top: 0,\n                  bottom: window.innerHeight,\n              };\n\n    let visible_ratio = 0;\n    if (rect.top < container_rect.bottom && rect.bottom > container_rect.top) {\n        const rect_height = rect.bottom - rect.top;\n        const visible_height =\n            Math.min(rect.bottom, container_rect.bottom) -\n            Math.max(rect.top, container_rect.top);\n        visible_ratio = visible_height / rect_height;\n    }\n\n    return visible_ratio;\n};\n\n/**\n * Get an escaped CSS selector for a given id string.\n *\n * id selectors should - but don't have to - start with a letter.\n * If the id starts with a number or a dash, it should be escaped.\n * This method does that for you.\n *\n * Alse see:\n * - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id\n * - https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape\n *\n * @param {String} id - The id to escape.\n *\n * @returns {String} - The escaped CSS selector.\n *\n * @example\n * escape_css_id_selector(\"#123\"); // returns \"#\\\\31 23\"\"\n * escape_css_id_selector(\"#-123\"); // returns \"#-\\\\31 23\"\n */\nconst escape_css_id = (id) => {\n    return `#${CSS.escape(id.split(\"#\")[1])}`;\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    is_input: is_input,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_scroll_x: get_scroll_x,\n    get_scroll_y: get_scroll_y,\n    get_relative_position: get_relative_position,\n    scroll_to_element: scroll_to_element,\n    scroll_to_top: scroll_to_top,\n    scroll_to_bottom: scroll_to_bottom,\n    get_data: get_data,\n    set_data: set_data,\n    delete_data: delete_data,\n    template: template,\n    get_visible_ratio: get_visible_ratio,\n    escape_css_id: escape_css_id,\n    add_event_listener: events.add_event_listener, // BBB export. TODO: Remove in an upcoming version.\n    remove_event_listener: events.remove_event_listener, // BBB export. TODO: Remove in an upcoming version.\n};\n\nexport default dom;\n","// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nexport const event_listener_map = {};\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    // Create event_listener_map entry if not existent.\n    if (!event_listener_map[el]) {\n        event_listener_map[el] = {};\n    }\n    let _cb = cb;\n    if (opts?.once === true) {\n        // For `once` events, also remove the entry from the event_listener_map.\n        _cb = (e) => {\n            delete event_listener_map[el][id];\n            cb(e);\n        };\n    }\n    // Only `capture` option is necessary for `removeEventListener`.\n    event_listener_map[el][id] = [event_type, _cb, opts.capture ? opts : undefined];\n    el.addEventListener(event_type, _cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} id - A unique id under which the event is registered.\n *\n */\nconst remove_event_listener = (el, id) => {\n    if (!el?.removeEventListener) {\n        return; // nothing to do.\n    }\n    const el_events = event_listener_map[el];\n    if (!el_events) {\n        return;\n    }\n    let entries;\n    if (id) {\n        // remove event listener with specific id\n        const entry = el_events[id];\n        entries = entry ? [entry] : [];\n    } else {\n        // remove all event listeners of element\n        entries = Object.entries(el_events);\n    }\n    for (const entry of entries || []) {\n        el.removeEventListener(entry[0], entry[1], entry[2]);\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve, reject) => {\n        // Case initialized\n        pattern.one(\"init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling init events from child elements. We\n                // want to check on init events coming directly from this\n                // Pattern's element.\n                return;\n            }\n            // Resolve promise and unregister the not-init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--not-init.${pattern.name}.patterns`\n            );\n            resolve();\n        });\n\n        // Case not initialized\n        pattern.one(\"not-init\", (e) => {\n            if (e.target !== pattern.el) {\n                // Don't handle bubbling not-init events from child elements.\n                // We want to check on not-init events coming directly from\n                // this Pattern's element.\n                return;\n            }\n            // Reject promise and unregister the init event handler.\n            remove_event_listener(\n                pattern.el,\n                `basepattern-one--init.${pattern.name}.patterns`\n            );\n            reject();\n        });\n    }).catch(() => {\n        throw new Error(`Pattern \"${pattern.name}\" not initialized.`);\n    });\n};\n\n/**\n * Event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = () => {\n    return new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragstart_event = () => {\n    return new Event(\"dragstart\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst dragend_event = () => {\n    return new Event(\"dragend\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n    dragstart_event: dragstart_event,\n    dragend_event: dragend_event,\n};\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        const plog = logging.getLogger(`pat.${name}`);\n        if (el.matches(pattern.trigger)) {\n            plog.debug(\"Initialising.\", el);\n            try {\n                if (pattern.init) {\n                    // old style initialisation\n                    pattern.init($el, null, trigger);\n                } else {\n                    // class based pattern initialisation\n                    new pattern($el, null, trigger);\n                }\n\n                plog.debug(\"done.\");\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                plog.error(\"Caught error:\", e);\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        // Add clone-code to the very beginning - we want to copy the markup\n        // before any other patterns changed the markup.\n        if (patterns.includes(\"clone-code\")) {\n            patterns.splice(patterns.indexOf(\"clone-code\"), 1);\n            patterns.unshift(\"clone-code\");\n        }\n\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content instanceof Text) {\n            // No need to scan a TextNode.\n            return;\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        let matcher = classes.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n        matcher = matcher.replace(/[*]/g, \".*\");\n        matcher = new RegExp(\"^\" + matcher + \"$\");\n\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            action: \"attribute-changed\",\n            dom: el,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                action: \"attribute-changed\",\n                dom: el,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n/*\n\n * parseLength - Parse a length from a string and return the parsed length in\n * pixels.\n\n * @param {String} length - A length string like `1px` or `25%`. Lengths without a unit are treated as pixels.\n * @param {Number} reference_length - The reference length to use for percentage lengths.\n *\n * @returns {Number} - A integer which represents the parsed length in pixels.\n *\n * @throws {Error} - If the length string is invalid.\n *\n * @example\n * parseLength(\"1px\"); // 1\n * parseLength(\"10%\", 100); // 10\n *\n */\nfunction parseLength(length, reference_length = null) {\n    const m = /^(\\d+(?:\\.\\d+)?)\\s*(\\%?\\w*)/.exec(length);\n    if (!m) {\n        throw new Error(\"Invalid length\");\n    }\n    const amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"px\":\n            return Math.round(amount);\n        case \"%\":\n            if (!reference_length) {\n                return 0;\n            }\n            return (reference_length / 100) * Math.round(amount);\n        case \"vw\":\n            return Math.round((amount * window.innerWidth) / 100);\n        case \"vh\":\n            return Math.round((amount * window.innerHeight) / 100);\n        case \"vmin\":\n            return Math.round(\n                (amount * Math.min(window.innerWidth, window.innerHeight)) / 100\n            );\n        case \"vmax\":\n            return Math.round(\n                (amount * Math.max(window.innerWidth, window.innerHeight)) / 100\n            );\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds.\n * From: https://underscorejs.org/#debounce\n *\n * @param {Function} func - The function to debounce.\n * @param {Number} ms - The time in milliseconds to debounce.\n * @param {Object} timer - A module-global timer as an object.\n * @param {Boolean} postpone - If true, the function will be called after it stops being called for N milliseconds.\n *\n * @returns {Function} - The debounced function.\n */\nconst debounce = (func, ms, timer = { timer: null }, postpone = true) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    timer.last_run = 0;\n    return function () {\n        const args = arguments;\n        if (!postpone && timer.timer && Date.now() - timer.last_run <= ms) {\n            return;\n        }\n        clearTimeout(timer.timer);\n        timer.last_run = Date.now();\n        timer.timer = setTimeout(() => {\n            func.apply(this, args);\n        }, ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See:\n *  https://stackoverflow.com/a/22706073/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    if (!html) {\n        return \"\";\n    }\n    const el = document.createElement(\"div\");\n    el.appendChild(document.createTextNode(html));\n    // Return escaped html and also replace quotes.\n    return el.innerHTML.replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See:\n *  https://stackoverflow.com/a/34064434/1337474\n *  https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    if (!escaped_html) {\n        return \"\";\n    }\n    const doc = new DOMParser().parseFromString(escaped_html, \"text/html\");\n    // Return unescaped html and also unescape quote named entities.\n    return doc.documentElement.textContent.replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\n/**\n * Build intersection observer threshold list.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#building_the_array_of_threshold_ratios\n *\n * @param {Number} num_steps - The number of steps to use.\n *\n * @returns {Array} - Returns the threshold list.\n */\nconst threshold_list = (num_steps = 0) => {\n    let thresholds = [];\n\n    for (let i = 1.0; i <= num_steps; i++) {\n        thresholds.push(i / num_steps);\n    }\n    thresholds.push(0);\n    return thresholds.sort();\n};\n\n/**\n * is_option_truthy - Check if an Pattern option is set.\n *\n * An option is set if it is not one of:\n * - undefined\n * - null\n * - \"none\"\n * - \"\"\n *\n * @param {String} option - The option to check.\n *\n * @returns {Boolean} - Returns true if the option is set, false otherwise.\n *\n * @example\n *\n * is_option_truthy() // false\n * is_option_truthy(undefined) // false\n * is_option_truthy(null) // false\n * is_option_truthy(\"\") // false\n * is_option_truthy(\"none\") // false\n * is_option_truthy(\"false\") // false\n * is_option_truthy(\"foo\") // true\n * is_option_truthy(true) // true\n * is_option_truthy(0) // true\n *\n */\nconst is_option_truthy = (option) => {\n    return ![undefined, null, \"none\", false, \"false\", \"\"].includes(option);\n};\n\nvar utils = {\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    parseLength: parseLength,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    threshold_list: threshold_list,\n    is_option_truthy: is_option_truthy,\n    getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n    elementInViewport: (el) => {\n        // BBB: Remove with next major version.\n        console.warn(\"Deprecated. Use utils.isElementInViewport\");\n        return isElementInViewport(el);\n    },\n};\n\nexport default utils;\n"],"names":["log","logging","getLogger","BasePattern","static","parser_group_options","parser_multiple","undefined","parser_inherit","constructor","el","options","this","name","trigger","parser","jquery","dispatchEvent","Event","bubbles","cancelable","window","setTimeout","async","debug","parse","init","warn","one","event_name","event_callback","events","add_event_listener","once","destroy","ArgumentParser","order","parameters","attribute","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","str","replace","__","p1","toUpperCase","addAlias","alias","original","addGroupToSpec","spec","m","match","group","field","first_spec","first_name","dest","addArgument","value","choices","multiple","addJSONArgument","default_value","push","type","Array","isArray","length","_typeof","choice","indexOf","slice","obj","_coerce","JSON","toLowerCase","num","parseInt","isNaN","toString","e","_set","opts","parts","split","part","v","trim","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","map","RegExp","matches","arg","Object","values","filter","it","subopt","_parseShorthandNotation","parameter","i","shift","sense","flag","positional","unshift","join","_parse","sep","extended","_defaults","$el","result","error","_cleanupOptions","group_options","keys","target","inherit","$","stack","$possible_config_providers","final_length","hasClass","parents","addBack","provider","frame","data","attr","bind","Math","max","results","utils","removeDuplicateObjects","mergeStack","current_value","prototype","add_argument","Parser","id","title","Pattern","L","default","LMarkerClusterGroup","MarkerClusterGroup","fitBoundsOptions","maxZoom","zoom","padding","boundsPadding","main_marker","fullscreenControl","fullscreencontrol","zoomControl","zoomcontrol","sleep","sleepNote","hoverToWake","sleepOpacity","marker_cluster","maxClusterRadius","on","original_event","Icon","Default","imagePath","image_path","locatecontrol","autolocate","control","locate","addTo","start","map_layers","baseLayers","layer","tileLayer","layers","default_map_layer","setView","latitude","longitude","geojson_ajaxurl","response","fetch","json","init_geojson","info","dataset","geojson","geosearch","GeoSearchControl","SearchProvider","geosearch_provider","EsriProvider","GoogleProvider","BingProvider","OpenStreetMapProvider","showMarker","addControl","latlng","lat","location","y","lng","x","feature","properties","editable","removeLayer","setLatLng","update","addLayer","marker","setIcon","create_marker","bind_popup","popup","label","fitBounds","addmarker","add_marker_callback","Control","SimpleMarkers","delete_control","allow_popup","marker_icon","marker_draggable","minimap","MiniMap","toggleDisplay","mapOptions","bounds","marker_layer","geoJson","pointToLayer","extraClasses","markerColor","color","main","Marker","icon","draggable","input_lat","document","querySelector","latinput","input_lng","lnginput","getLatLng","getBounds","onEachFeature","no_delete","popup_el","createElement","innerHTML","addEventListener","preventDefault","bindPopup","AwesomeMarkers","prefix","registry","register","logger","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","getComputedStyle","getPropertyValue","parseFloat","round","get_relative_position","reference_el","body","left","abs","getBoundingClientRect","scrollLeft","dom","top","scrollTop","toNodeArray","nodes","NodeList","querySelectorAllAndMe","selector","all","querySelectorAll","wrap","wrapper","parentNode","insertBefore","appendChild","hide","style","display","show","val","find_parents","ret","parent","closest","find_scoped","get_parents","HTMLElement","acquire_attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","is_input","test","nodeName","create_from_string","string","createRange","createContextualFragment","find_scroll_container","direction","fallback","overflow_y","includes","overflow_x","get_scroll_x","scroll_reference","scrollX","get_scroll_y","scrollY","scroll_to_element","scroll_container","offset","position","behavior","scrollTo","scroll_to_top","scroll_to_bottom","scrollHeight","get_data","set_data","delete_data","template","template_string","template_variables","Function","call","get_visible_ratio","container","rect","container_rect","bottom","innerHeight","visible_ratio","rect_height","min","escape_css_id","CSS","escape","remove_event_listener","event_listener_map","removeEventListener","el_events","entries","entry","event_type","cb","_cb","capture","await_event","Promise","resolve","await_pattern_init","pattern","reject","catch","Error","blur_event","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","dragstart_event","dragend_event","root","writer","oThis","TypeError","aArgs","arguments","fToBind","fNOP","fBound","apply","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","console","path","route","_getFlag","context","setEnabled","state","isEnabled","setLevel","getLevel","fatal","logconfig","exec","search","getWriter","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","patterns","ready","sort","scan","clear","transformPattern","content","transform","initPattern","plog","orderPatterns","splice","Text","selectors","reverse","classList","add","jquery_plugin","plugin_name","jqueryPlugin","safeClone","clone","forEach","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","method","each","pat","charAt","pluralBoundJQueryPlugin","$this","isObject","isElementInViewport","partial","rec","right","every","documentElement","clientHeight","innerWidth","clientWidth","escapeRegExp","extend","source","prop","hasOwnProperty","findLabel","input","$label","nodeType","tagName","form","removeWildcardClass","targets","classes","ensureArray","remove","matcher","class_list","ok","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","action","t","easing","complete","addURLQueryParameter","fullURL","param","url","hash","newURL","objs","comparator","reduce","list","next_obj","is_duplicate","frame_length","hasValue","checked","selectedIndex","parseTime","time","amount","parseLength","reference_length","findRelatives","$relatives","$form","find","get_bounds","width","height","checkInputSupport","invalid_value","support","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","timeout","ms","debounce","func","timer","postpone","last_run","args","Date","now","clearTimeout","isIE","documentMode","jqToNode","force_array","isPrototypeOf","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","createTextNode","unescape_html","escaped_html","DOMParser","parseFromString","textContent","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","UTC","utc_2","floor","threshold_list","num_steps","thresholds","is_option_truthy","option","getCSSValue","elementInViewport"],"sourceRoot":""}