{"version":3,"file":"chunks/210.8eb1588cf72ba4124aba.min.js","mappings":"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","sources":["webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/mockup-parser.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/base.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/parser.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/pat-leaflet/src/leaflet.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/dom.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/events.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/logging.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/registry.js","webpack://plone.formwidget.geolocation/./node_modules/@patternslib/patternslib/src/core/utils.js"],"sourcesContent":["import $ from \"jquery\";\n\nvar parser = {\n    getOptions($el, patternName, options) {\n        /* This is the Mockup parser. An alternative parser for Patternslib\n         * patterns.\n         *\n         * NOTE: Use of the Mockup parser is discouraged and is added here for\n         * legacy support for the Plone Mockup project.\n         *\n         * It parses a DOM element for pattern configuration options.\n         */\n        options = options || {};\n        // get options from parent element first, stop if element tag name is 'body'\n        if ($el.length !== 0 && !$.nodeName($el[0], \"body\")) {\n            options = this.getOptions($el.parent(), patternName, options);\n        }\n        // collect all options from element\n        let elOptions = {};\n        if ($el.length !== 0) {\n            elOptions = $el.data(\"pat-\" + patternName);\n            if (elOptions) {\n                // parse options if string\n                if (typeof elOptions === \"string\") {\n                    const tmpOptions = {};\n                    $.each(elOptions.split(\";\"), function (i, item) {\n                        item = item.split(\":\");\n                        item.reverse();\n                        let key = item.pop();\n                        key = key.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        item.reverse();\n                        let value = item.join(\":\");\n                        value = value.replace(/^\\s+|\\s+$/g, \"\"); // trim\n                        tmpOptions[key] = value;\n                    });\n                    elOptions = tmpOptions;\n                }\n            }\n        }\n        return $.extend(true, {}, options, elOptions);\n    },\n};\n\nexport default parser;\n","/**\n * A Base pattern for creating scoped patterns. It's similar to Backbone's\n * Model class. The advantage of this approach is that each instance of a\n * pattern has its own local scope (closure).\n *\n * A new instance is created for each DOM element on which a pattern applies.\n *\n * You can assign values, such as $el, to `this` for an instance and they\n * will remain unique to that instance.\n *\n * Older Patternslib patterns on the other hand have a single global scope for\n * all DOM elements.\n */\nimport $ from \"jquery\";\nimport Registry from \"./registry\";\nimport logging from \"./logging\";\nimport mockupParser from \"./mockup-parser\";\n\nconst log = logging.getLogger(\"Patternslib Base\");\n\nconst initBasePattern = function ($el, options, trigger) {\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    const name = this.prototype.name;\n    const plog = logging.getLogger(`pat.${name}`);\n    let pattern = $el.data(`pattern-${name}`);\n    if (pattern === undefined && Registry.patterns[name]) {\n        try {\n            // Immediately set the pattern instance to the temporary value\n            // ``initializing`` before the async Base constructor is setting\n            // the value later.\n            // This prevents re-init the pattern on this element on multiple\n            // initialization calls..\n            $el.data(`pattern-${name}`, \"initializing\");\n            options =\n                this.prototype.parser === \"mockup\"\n                    ? mockupParser.getOptions($el, name, options)\n                    : options;\n            pattern = new Registry.patterns[name]($el, options, trigger);\n        } catch (e) {\n            plog.error(`Failed while initializing ${name} pattern.`, e);\n        }\n    }\n    return pattern;\n};\n\nconst Base = async function ($el, options, trigger) {\n    if (!$el) {\n        log.warn(\"No element given to pattern.\");\n        return;\n    }\n    if (!$el.jquery) {\n        $el = $($el);\n    }\n    this.$el = $el;\n    this.el = $el[0];\n    this.options = $.extend(true, {}, this.defaults || {}, options || {});\n    await this.init($el, options, trigger);\n\n    // Store pattern instance on element\n    this.$el.data(`pattern-${this.name}`, this);\n    this.el[`pattern-${this.name}`] = this;\n\n    this.emit(\"init\");\n};\n\nBase.prototype = {\n    constructor: Base,\n    on(eventName, eventCallback) {\n        this.$el.on(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    one(eventName, eventCallback) {\n        this.$el.one(`${eventName}.${this.name}.patterns`, eventCallback);\n    },\n    emit(eventName, args) {\n        // args should be a list\n        if (args === undefined) {\n            args = [];\n        }\n        this.$el.trigger(`${eventName}.${this.name}.patterns`, args);\n    },\n};\n\nBase.extend = function (patternProps) {\n    /* Helper function to correctly set up the prototype chain for new patterns.\n     */\n    const parent = this;\n    let child;\n\n    // Check that the required configuration properties are given.\n    if (!patternProps) {\n        throw new Error(\n            \"Pattern configuration properties required when calling Base.extend\"\n        );\n    }\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (Object.hasOwnProperty.call(patternProps, \"constructor\")) {\n        child = patternProps.constructor;\n    } else {\n        child = function () {\n            parent.apply(this, arguments);\n        };\n    }\n\n    // Allow patterns to be extended indefinitely\n    child.extend = Base.extend;\n\n    // Static properties required by the Patternslib registry\n    child.init = initBasePattern;\n    child.jquery_plugin = true;\n    child.trigger = patternProps.trigger;\n    child.parser = patternProps?.parser || null;\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function () {\n        this.constructor = child;\n    };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate();\n\n    // Add pattern's configuration properties (instance properties) to the subclass,\n    $.extend(true, child.prototype, patternProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    // Register the pattern in the Patternslib registry.\n    if (!patternProps.name) {\n        log.warn(\"This pattern without a name attribute will not be registered!\");\n    } else if (!patternProps.trigger) {\n        log.warn(\n            `The pattern ${patternProps.name} does not have a trigger attribute, it will not be registered.`\n        );\n    } else if (patternProps.autoregister !== false) {\n        Registry.register(child, patternProps.name);\n    }\n    return child;\n};\n\nexport default Base;\n","// Patterns argument parser\nimport $ from \"jquery\";\nimport utils from \"./utils.js\";\nimport logging from \"./logging\";\n\nclass ArgumentParser {\n    constructor(name) {\n        this.order = [];\n        this.parameters = {};\n        this.attribute = \"data-pat-\" + name;\n        this.enum_values = {};\n        this.enum_conflicts = [];\n        this.groups = {};\n        this.possible_groups = {};\n        this.log = logging.getLogger(name + \".parser\");\n\n        this.group_pattern = /([a-z][a-z0-9]*)-([A-Z][a-z0-0\\-]*)/i;\n        this.json_param_pattern = /^\\s*\\[?\\s*{/i;\n        this.named_param_pattern = /^\\s*([a-z][a-z0-9\\-]*)\\s*:(.*)/is;\n        this.token_pattern = /(([\"']).*?(?!\\\\)\\2)|\\s*(\\S+)\\s*/g;\n    }\n\n    _camelCase(str) {\n        return str.replace(/\\-([a-z])/g, (__, p1) => p1.toUpperCase());\n    }\n\n    addAlias(alias, original) {\n        /* Add an alias for a previously added parser argument.\n         *\n         * Useful when you want to support both US and UK english argument\n         * names.\n         */\n        if (this.parameters[original]) {\n            this.parameters[original].alias = alias;\n        } else {\n            throw (\n                'Attempted to add an alias \"' +\n                alias +\n                '\" for a non-existing parser argument \"' +\n                original +\n                '\".'\n            );\n        }\n    }\n\n    addGroupToSpec(spec) {\n        /* Determine wether an argument being parsed can be grouped and\n         * update its specifications object accordingly.\n         *\n         * Internal method used by addArgument and addJSONArgument\n         */\n        const m = spec.name.match(this.group_pattern);\n        if (m) {\n            const group = m[1];\n            const field = m[2];\n            if (group in this.possible_groups) {\n                const first_spec = this.possible_groups[group];\n                const first_name = first_spec.name.match(this.group_pattern)[2];\n                first_spec.group = group;\n                first_spec.dest = first_name;\n                this.groups[group] = new ArgumentParser();\n                this.groups[group].addArgument(\n                    first_name,\n                    first_spec.value,\n                    first_spec.choices,\n                    first_spec.multiple\n                );\n                delete this.possible_groups[group];\n            }\n            if (group in this.groups) {\n                this.groups[group].addArgument(\n                    field,\n                    spec.value,\n                    spec.choices,\n                    spec.multiple\n                );\n                spec.group = group;\n                spec.dest = field;\n            } else {\n                this.possible_groups[group] = spec;\n                spec.dest = this._camelCase(spec.name);\n            }\n        }\n        return spec;\n    }\n\n    addJSONArgument(name, default_value) {\n        /* Add an argument where the value is provided in JSON format.\n         *\n         * This is a different usecase than specifying all arguments to\n         * the data-pat-... attributes in JSON format, and instead is part\n         * of the normal notation except that a value is in JSON instead of\n         * for example a string.\n         */\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec({\n            name: name,\n            value: default_value,\n            dest: name,\n            group: null,\n            type: \"json\",\n        });\n    }\n\n    addArgument(name, default_value, choices, multiple) {\n        const spec = {\n            name: name,\n            value:\n                multiple && !Array.isArray(default_value)\n                    ? [default_value]\n                    : default_value,\n            multiple: multiple,\n            dest: name,\n            group: null,\n        };\n        if (choices && Array.isArray(choices) && choices.length) {\n            spec.choices = choices;\n            spec.type = this._typeof(choices[0]);\n            for (const choice of choices) {\n                if (this.enum_conflicts.indexOf(choice) !== -1) {\n                    continue;\n                } else if (choice in this.enum_values) {\n                    this.enum_conflicts.push(choice);\n                    delete this.enum_values[choice];\n                } else {\n                    this.enum_values[choice] = name;\n                }\n            }\n        } else if (typeof spec.value === \"string\" && spec.value.slice(0, 1) === \"$\") {\n            spec.type = this.parameters[spec.value.slice(1)].type;\n        } else {\n            // Note that this will get reset by _defaults if default_value is a function.\n            spec.type = this._typeof(multiple ? spec.value[0] : spec.value);\n        }\n        this.order.push(name);\n        this.parameters[name] = this.addGroupToSpec(spec);\n    }\n\n    _typeof(obj) {\n        if (obj === null) {\n            return \"null\";\n        }\n        return typeof obj;\n    }\n\n    _coerce(name, value) {\n        const spec = this.parameters[name];\n        if (typeof value !== spec.type)\n            try {\n                switch (spec.type) {\n                    case \"json\":\n                        value = JSON.parse(value);\n                        break;\n                    case \"boolean\":\n                        if (typeof value === \"string\") {\n                            value = value.toLowerCase();\n                            const num = parseInt(value, 10);\n                            if (!isNaN(num)) value = !!num;\n                            else\n                                value =\n                                    value === \"true\" ||\n                                    value === \"y\" ||\n                                    value === \"yes\" ||\n                                    value === \"y\" ||\n                                    value === \"on\";\n                        } else if (typeof value === \"number\") {\n                            value = !!value;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to boolean\";\n                        }\n                        break;\n                    case \"number\":\n                        if (typeof value === \"string\") {\n                            value = parseInt(value, 10);\n                            if (isNaN(value)) {\n                                throw \"Cannot convert value for \" + name + \" to number\";\n                            }\n                        } else if (typeof value === \"boolean\") {\n                            value = value + 0;\n                        } else {\n                            throw \"Cannot convert value for \" + name + \" to number\";\n                        }\n                        break;\n                    case \"string\":\n                        value = value.toString();\n                        break;\n                    case \"null\": // Missing default values\n                    case \"undefined\":\n                        break;\n                    default:\n                        throw (\n                            \"Do not know how to convert value for \" +\n                            name +\n                            \" to \" +\n                            spec.type\n                        );\n                }\n            } catch (e) {\n                this.log.warn(e);\n                return null;\n            }\n\n        if (spec.choices && spec.choices.indexOf(value) === -1) {\n            this.log.warn(\"Illegal value for \" + name + \": \" + value);\n            return null;\n        }\n        return value;\n    }\n\n    _set(opts, name, value) {\n        if (!(name in this.parameters)) {\n            this.log.debug(\"Ignoring value for unknown argument \" + name);\n            return;\n        }\n        const spec = this.parameters[name];\n        let parts;\n        if (spec.multiple) {\n            if (typeof value === \"string\") {\n                parts = value.split(/,+/);\n            } else {\n                parts = value;\n            }\n            value = [];\n            for (const part of parts) {\n                const v = this._coerce(name, part.trim());\n                if (v !== null) {\n                    value.push(v);\n                }\n            }\n        } else {\n            value = this._coerce(name, value);\n            if (value === null) {\n                return;\n            }\n        }\n        opts[name] = value;\n    }\n\n    _split(text) {\n        const tokens = [];\n        text.replace(this.token_pattern, (match, quoted, __, simple) => {\n            if (quoted) {\n                tokens.push(quoted);\n            } else if (simple) {\n                tokens.push(simple);\n            }\n        });\n        return tokens;\n    }\n\n    _parseExtendedNotation(argstring) {\n        const opts = {};\n        const parts = argstring\n            .replace(/;;/g, \"\\0x1f\")\n            .replace(/&amp;/g, \"&amp\\0x1f\")\n            .split(/;/)\n            .map((el) => el.replace(new RegExp(\"\\0x1f\", \"g\"), \";\"));\n        for (const part of parts) {\n            if (!part) {\n                continue;\n            }\n            const matches = part.match(this.named_param_pattern);\n            if (!matches) {\n                this.log.warn(\"Invalid parameter: \" + part + \": \" + argstring);\n                continue;\n            }\n            const name = matches[1];\n            const value = matches[2].trim();\n            const arg = Object.values(this.parameters).filter((it) => it.alias === name);\n\n            const is_alias = arg.length === 1;\n\n            if (is_alias) {\n                this._set(opts, arg[0].name, value);\n            } else if (name in this.parameters) {\n                this._set(opts, name, value);\n            } else if (name in this.groups) {\n                const subopt = this.groups[name]._parseShorthandNotation(value);\n                for (const field in subopt) {\n                    this._set(opts, name + \"-\" + field, subopt[field]);\n                }\n            } else {\n                this.log.warn(\"Unknown named parameter \" + matches[1]);\n                continue;\n            }\n        }\n        return opts;\n    }\n\n    _parseShorthandNotation(parameter) {\n        const parts = this._split(parameter);\n        const opts = {};\n        let i = 0;\n\n        while (parts.length) {\n            const part = parts.shift().trim();\n            let sense;\n            let flag;\n            let positional = true;\n            if (part.slice(0, 3) === \"no-\") {\n                sense = false;\n                flag = part.slice(3);\n            } else {\n                sense = true;\n                flag = part;\n            }\n            if (flag in this.parameters && this.parameters[flag].type === \"boolean\") {\n                positional = false;\n                this._set(opts, flag, sense);\n            } else if (flag in this.enum_values) {\n                positional = false;\n                this._set(opts, this.enum_values[flag], flag);\n            } else if (positional) this._set(opts, this.order[i], part);\n            else {\n                parts.unshift(part);\n                break;\n            }\n            i++;\n            if (i >= this.order.length) {\n                break;\n            }\n        }\n        if (parts.length) this.log.warn(\"Ignore extra arguments: \" + parts.join(\" \"));\n        return opts;\n    }\n\n    _parse(parameter) {\n        if (!parameter) {\n            return {};\n        }\n        if (parameter.match(this.json_param_pattern)) {\n            try {\n                return JSON.parse(parameter);\n            } catch (e) {\n                this.log.warn(\"Invalid JSON argument found: \" + parameter);\n            }\n        }\n        if (parameter.match(this.named_param_pattern)) {\n            return this._parseExtendedNotation(parameter);\n        }\n        const sep = parameter.indexOf(\";\");\n        if (sep === -1) {\n            return this._parseShorthandNotation(parameter);\n        }\n        const opts = this._parseShorthandNotation(parameter.slice(0, sep));\n        const extended = this._parseExtendedNotation(parameter.slice(sep + 1));\n        for (const name in extended) {\n            opts[name] = extended[name];\n        }\n        return opts;\n    }\n\n    _defaults($el) {\n        const result = {};\n        for (const name in this.parameters)\n            if (typeof this.parameters[name].value === \"function\")\n                try {\n                    result[name] = this.parameters[name].value($el, name);\n                    this.parameters[name].type = typeof result[name];\n                } catch (e) {\n                    this.log.error(\"Default function for \" + name + \" failed.\");\n                }\n            else result[name] = this.parameters[name].value;\n        return result;\n    }\n\n    _cleanupOptions(options, group_options = true) {\n        // Resolve references\n        for (const name of Object.keys(options)) {\n            const spec = this.parameters[name];\n            if (spec === undefined) continue;\n\n            if (\n                options[name] === spec.value &&\n                typeof spec.value === \"string\" &&\n                spec.value.slice(0, 1) === \"$\"\n            )\n                options[name] = options[spec.value.slice(1)];\n        }\n        if (group_options) {\n            // Move options into groups and do renames\n            for (const name of Object.keys(options)) {\n                const spec = this.parameters[name];\n                let target;\n                if (spec === undefined) continue;\n\n                if (spec.group) {\n                    if (typeof options[spec.group] !== \"object\")\n                        options[spec.group] = {};\n                    target = options[spec.group];\n                } else {\n                    target = options;\n                }\n\n                if (spec.dest !== name) {\n                    target[spec.dest] = options[name];\n                    delete options[name];\n                }\n            }\n        }\n        return options;\n    }\n\n    parse($el, options, multiple, inherit = true, group_options = true) {\n        if (!$el.jquery) {\n            $el = $($el);\n        }\n        if (typeof options === \"boolean\" && multiple === undefined) {\n            // Fix argument order: ``multiple`` passed instead of ``options``.\n            multiple = options;\n            options = {};\n        }\n        const stack = inherit ? [[this._defaults($el)]] : [[{}]];\n        let $possible_config_providers;\n        let final_length = 1;\n        /*\n         * XXX this is a workaround for:\n         * - https://github.com/Patternslib/Patterns/issues/393\n         *\n         * Prevents the parser to pollute the pat-modal configuration\n         * with data-pat-inject elements define in a `.pat-modal` parent element.\n         *\n         *  Probably this function should be completely revisited, see:\n         * - https://github.com/Patternslib/Patterns/issues/627\n         *\n         */\n        if (\n            !inherit ||\n            ($el.hasClass(\"pat-modal\") && this.attribute === \"data-pat-inject\")\n        ) {\n            $possible_config_providers = $el;\n        } else {\n            $possible_config_providers = $el\n                .parents(\"[\" + this.attribute + \"]\")\n                .addBack();\n        }\n\n        for (const provider of $possible_config_providers) {\n            let frame;\n            const data = ($(provider).attr(this.attribute) || \"\").trim();\n            if (!data) {\n                continue;\n            }\n            const _parse = this._parse.bind(this);\n            if (data.match(/&&/)) {\n                frame = data.split(/\\s*&&\\s*/).map(_parse);\n            } else {\n                frame = _parse(data);\n            }\n            if (!Array.isArray(frame)) {\n                frame = [frame];\n            }\n            final_length = Math.max(frame.length, final_length);\n            stack.push(frame);\n        }\n\n        if (typeof options === \"object\") {\n            if (Array.isArray(options)) {\n                stack.push(options);\n                final_length = Math.max(options.length, final_length);\n            } else {\n                stack.push([options]);\n            }\n        }\n        if (!multiple) {\n            final_length = 1;\n        }\n        const results = utils\n            .removeDuplicateObjects(utils.mergeStack(stack, final_length))\n            .map((current_value) => this._cleanupOptions(current_value, group_options));\n        return multiple ? results : results[0];\n    }\n}\n\n// BBB\nArgumentParser.prototype.add_argument = ArgumentParser.prototype.addArgument;\n\nexport default ArgumentParser;\n","import Base from \"@patternslib/patternslib/src/core/base\";\nimport Parser from \"@patternslib/patternslib/src/core/parser\";\nimport events from \"@patternslib/patternslib/src/core/events\";\nimport logging from \"@patternslib/patternslib/src/core/logging\";\n\nconst log = logging.getLogger(\"pat-leaflet\");\nlog.debug(\"pattern loaded\");\n\nexport const parser = new Parser(\"leaflet\");\n\nparser.addArgument(\"latitude\", \"0.0\");\nparser.addArgument(\"longitude\", \"0.0\");\nparser.addArgument(\"zoom\", \"14\");\n\nparser.addArgument(\"maxClusterRadius\", \"80\");\n\nparser.addArgument(\"boundsPadding\", \"20\");\n\n// default controls\nparser.addArgument(\"fullscreencontrol\", true);\nparser.addArgument(\"zoomcontrol\", true);\n\n// disabled controls\nparser.addArgument(\"addmarker\", false);\nparser.addArgument(\"autolocate\", false);\nparser.addArgument(\"geosearch\", false);\nparser.addArgument(\"geosearch_provider\", \"openstreetmap\");\nparser.addArgument(\"locatecontrol\", false);\nparser.addArgument(\"minimap\", false);\n\n// map layers\nparser.addArgument(\"default_map_layer\", { id: \"OpenStreetMap.Mapnik\", options: {} });\nparser.addArgument(\"map_layers\", [\n    { title: \"Map\", id: \"OpenStreetMap.Mapnik\", options: {} },\n    { title: \"Satellite\", id: \"Esri.WorldImagery\", options: {} },\n    { title: \"Topographic\", id: \"OpenTopoMap\", options: {} },\n    { title: \"Toner\", id: \"Stamen.Toner\", options: {} },\n]);\n\nparser.addArgument(\"image_path\", \"node_modules/leaflet.awesome-markers/dist/images\");\n\n// fetch geojson data via AJAX url\nparser.addArgument(\"geojson_ajaxurl\", \"\");\n\nexport default Base.extend({\n    name: \"leaflet\",\n    trigger: \".pat-leaflet\",\n    map: undefined,\n    parser: parser,\n\n    async init() {\n        import(\"./leaflet.scss\");\n\n        this.L = (await import(\"leaflet\")).default;\n        const LMarkerClusterGroup = (await import(\"leaflet.markercluster\")).MarkerClusterGroup; // prettier-ignore\n\n        await import(\"leaflet-providers\");\n        await import(\"leaflet-sleep\");\n        await import(\"leaflet.awesome-markers\");\n        await import(\"leaflet.fullscreen\");\n\n        const options = (this.options = parser.parse(this.el));\n\n        const fitBoundsOptions = (this.fitBoundsOptions = {\n            maxZoom: options.zoom,\n            padding: [parseInt(options.boundsPadding), parseInt(options.boundsPadding)],\n        });\n\n        const main_marker = (this.main_marker = null);\n\n        // MAP INIT\n        const map = (this.map = this.L.map(this.el, {\n            fullscreenControl: options.fullscreencontrol,\n            zoomControl: options.zoomcontrol,\n            // Leaflet.Sleep options\n            sleep: true,\n            sleepNote: false,\n            hoverToWake: false,\n            sleepOpacity: 1,\n        }));\n\n        const marker_cluster = (this.marker_cluster = new LMarkerClusterGroup({\n            maxClusterRadius: this.options.maxClusterRadius,\n        }));\n\n        // hand over some map events to the element\n        map.on(\"moveend zoomend\", (e) => {\n            this.$el.trigger(`leaflet.${e.type}`, { original_event: e });\n        });\n\n        this.L.Icon.Default.imagePath = options.image_path;\n\n        // Locatecontrol\n        if (options.locatecontrol || options.autolocate) {\n            await import(\"leaflet.locatecontrol\");\n            const locatecontrol = this.L.control.locate().addTo(map);\n            if (options.autolocate) {\n                locatecontrol.start();\n            }\n        }\n\n        // Layers\n        // Must be an array\n        if (Array.isArray(options.map_layers)) {\n            const baseLayers = {};\n\n            // Convert map_layers elements from string to objects, if necesarry\n            options.map_layers = options.map_layers.map(function (it) {\n                if (typeof it == \"string\") {\n                    it = { id: it, title: it, options: {} };\n                }\n                return it;\n            });\n            for (const layer of options.map_layers) {\n                // build layers object with tileLayer instances\n                baseLayers[layer.title] = this.L.tileLayer.provider(\n                    layer.id,\n                    layer.options\n                );\n            }\n            if (options.map_layers.length > 1) {\n                this.L.control.layers(baseLayers).addTo(map);\n            }\n        }\n\n        if (typeof options.default_map_layer == \"string\") {\n            options.default_map_layer = { id: options.default_map_layer, options: {} };\n        }\n        this.L.tileLayer\n            .provider(options.default_map_layer.id, options.default_map_layer.options)\n            .addTo(map);\n\n        map.setView([options.latitude, options.longitude], options.zoom);\n\n        // ADD MARKERS\n        if (options.geojson_ajaxurl !== \"\") {\n            let response;\n            try {\n                response = await fetch(options.geojson_ajaxurl);\n                const data = await response.json();\n                this.init_geojson(map, data);\n            } catch (e) {\n                log.info(`Could not load geojson data from url ${options.geojson_ajaxurl}`);\n                return;\n            }\n        } else if (this.el.dataset.geojson) {\n            try {\n                // inject inline geoJSON data object\n                this.init_geojson(map, JSON.parse(this.el.dataset.geojson));\n            } catch(e) {\n                log.info(\"Could not parse geojson data.\");\n                return;\n            }\n        }\n\n        if (options.geosearch) {\n            const { GeoSearchControl } = await import(\"leaflet-geosearch\");\n\n            let SearchProvider;\n            if (options.geosearch_provider === \"esri\") {\n                SearchProvider = (await import(\"leaflet-geosearch\")).EsriProvider;\n            } else if (options.geosearch_provider === \"google\") {\n                SearchProvider = (await import(\"leaflet-geosearch\")).GoogleProvider;\n            } else if (options.geosearch_provider === \"bing\") {\n                SearchProvider = (await import(\"leaflet-geosearch\")).BingProvider;\n            } else {\n                SearchProvider = (await import(\"leaflet-geosearch\")).OpenStreetMapProvider; // prettier-ignore\n            }\n\n            // GEOSEARCH\n            const geosearch = new GeoSearchControl({\n                showMarker: main_marker === null,\n                provider: new SearchProvider(),\n            });\n            map.addControl(geosearch);\n\n            map.on(\"geosearch/showlocation\", (e) => {\n                const latlng = { lat: e.location.y, lng: e.location.x };\n                if (main_marker && main_marker.feature.properties.editable) {\n                    // update main_marker from geojson object\n                    this.marker_cluster.removeLayer(main_marker);\n                    main_marker.setLatLng(latlng).update();\n                    this.marker_cluster.addLayer(main_marker);\n                } else {\n                    e.marker.setIcon(this.create_marker(\"red\"));\n                    this.bind_popup(\n                        { properties: { editable: true, popup: e.location.label } },\n                        e.marker\n                    );\n                    marker_cluster.addLayer(e.marker);\n                }\n                // fit to window\n                map.fitBounds([latlng], fitBoundsOptions);\n            });\n        }\n\n        if (options.addmarker) {\n            await import(\"leaflet.simplemarkers/lib/Control.SimpleMarkers\");\n\n            const add_marker_callback = function (marker) {\n                this.bind_popup({ properties: { editable: true } }, marker);\n            };\n            const addmarker = new this.L.Control.SimpleMarkers({\n                delete_control: false,\n                allow_popup: false,\n                marker_icon: this.create_marker(\"red\"),\n                marker_draggable: true,\n                add_marker_callback: add_marker_callback.bind(this),\n            });\n            map.addControl(addmarker);\n        }\n\n        // Minimap\n        if (options.minimap) {\n            await import(\"leaflet-minimap\");\n            const minimap = new this.L.Control.MiniMap(\n                this.L.tileLayer.provider(\n                    options.default_map_layer.id,\n                    options.default_map_layer.options\n                ),\n                { toggleDisplay: true, mapOptions: { sleep: false } }\n            );\n            map.addControl(minimap);\n        }\n\n        log.debug(\"pattern initialized\");\n    },\n\n    init_geojson(map, geojson) {\n        let bounds;\n        const marker_layer = this.L.geoJson(geojson, {\n            pointToLayer: (feature, latlng) => {\n                const extraClasses = feature.properties.extraClasses || \"\";\n                let markerColor = \"green\";\n                if (feature.properties.color) {\n                    markerColor = feature.properties.color;\n                } else if (!this.main_marker || feature.properties.main) {\n                    markerColor = \"red\";\n                }\n                const marker_icon = this.create_marker(markerColor, extraClasses);\n                const marker = new this.L.Marker(latlng, {\n                    icon: marker_icon,\n                    draggable: feature.properties.editable,\n                });\n                if (!this.main_marker || feature.properties.main) {\n                    // Set main marker. This is the one, which is used\n                    // for setting the search result marker.\n                    this.main_marker = marker;\n                }\n\n                const input_lat = document.querySelector(feature.properties.latinput);\n                const input_lng = document.querySelector(feature.properties.lnginput);\n\n                marker.on(\"dragend move\", (e) => {\n                    // UPDATE INPUTS ON MARKER MOVE\n                    const latlng = e.target.getLatLng();\n                    if (input_lat) {\n                        input_lat.value = latlng.lat;\n                    }\n                    if (input_lng) {\n                        input_lng.value = latlng.lng;\n                    }\n                });\n                if (input_lat) {\n                    // UPDATE MARKER ON LATITUDE CHANGE\n                    events.add_event_listener(\n                        input_lat,\n                        \"input\",\n                        \"pat-leaflet--input_lat\",\n                        (e) => {\n                            const latlng = marker.getLatLng();\n                            this.marker_cluster.removeLayer(marker);\n                            marker\n                                .setLatLng({ lat: e.target.value, lng: latlng.lng })\n                                .update();\n                            this.marker_cluster.addLayer(marker);\n                            // fit bounds\n                            bounds = this.marker_cluster.getBounds();\n                            map.fitBounds(bounds, this.fitBoundsOptions);\n                        }\n                    );\n                }\n                if (input_lng) {\n                    // UPDATE MARKER ON LONGITUDE CHANGE\n                    events.add_event_listener(\n                        input_lng,\n                        \"input\",\n                        \"pat-leaflet--input_lng\",\n                        (e) => {\n                            const latlng = marker.getLatLng();\n                            this.marker_cluster.removeLayer(marker);\n                            marker\n                                .setLatLng({ lat: latlng.lat, lng: e.target.value })\n                                .update();\n                            this.marker_cluster.addLayer(marker);\n                            // fit bounds\n                            bounds = this.marker_cluster.getBounds();\n                            map.fitBounds(bounds, this.fitBoundsOptions);\n                        }\n                    );\n                }\n                return marker;\n            },\n            onEachFeature: this.bind_popup.bind(this),\n        });\n        this.marker_cluster.addLayer(marker_layer);\n        map.addLayer(this.marker_cluster);\n\n        // autozoom\n        bounds = this.marker_cluster.getBounds();\n        map.fitBounds(bounds, this.fitBoundsOptions);\n    },\n\n    bind_popup(feature, marker) {\n        const popup = feature.properties.popup || \"\";\n        if (feature.properties.editable && !feature.properties.no_delete) {\n            // for editable markers add \"delete marker\" link to popup\n            const popup_el = document.createElement(\"div\");\n            popup_el.innerHTML = `\n              <div>${popup}</div>\n              <br/>\n              <button type=\"button\" class=\"delete-marker\">Delete marker</button>\n            `;\n\n            // delete marker\n            popup_el.querySelector(\".delete-marker\").addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                this.map.removeLayer(marker);\n                marker = undefined;\n            });\n            marker.bindPopup(popup_el);\n        } else if (popup) {\n            marker.bindPopup(popup);\n        }\n    },\n\n    create_marker(color, extraClasses) {\n        color = color || \"red\";\n        extraClasses = extraClasses || \"\";\n        return this.L.AwesomeMarkers.icon({\n            markerColor: color,\n            prefix: \"fa\",\n            icon: \"circle\",\n            extraClasses: extraClasses,\n        });\n    },\n});\n","/* Utilities for DOM traversal or navigation */\nimport events from \"./events\";\n\nconst DATA_PREFIX = \"__patternslib__data_prefix__\";\nconst DATA_STYLE_DISPLAY = \"__patternslib__style__display\";\n\n/**\n * Return an array of DOM nodes.\n *\n * @param {Node|NodeList|jQuery} nodes - The DOM node to start the search from.\n *\n * @returns {Array} - An array of DOM nodes.\n */\nconst toNodeArray = (nodes) => {\n    if (nodes.jquery || nodes instanceof NodeList) {\n        // jQuery or document.querySelectorAll\n        nodes = [...nodes];\n    } else if (nodes instanceof Array === false) {\n        nodes = [nodes];\n    }\n    return nodes;\n};\n\n/**\n * Like querySelectorAll but including the element where it starts from.\n * Returns an Array, not a NodeList\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst querySelectorAllAndMe = (el, selector) => {\n    if (!el) {\n        return [];\n    }\n\n    const all = [...el.querySelectorAll(selector)];\n    if (el.matches(selector)) {\n        all.unshift(el); // start element should be first.\n    }\n    return all;\n};\n\n/**\n * Wrap a element with a wrapper element.\n *\n * @param {Node} el - The DOM node to wrap.\n */\nconst wrap = (el, wrapper) => {\n    // See: https://stackoverflow.com/a/13169465/1337474\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n};\n\n/**\n * Hides the element with ``display: none`` and stores the current display value.\n *\n * @param {Node} el - The DOM node to hide.\n */\nconst hide = (el) => {\n    if (el.style.display === \"none\") {\n        // Nothing to do.\n        return;\n    }\n    if (el.style.display) {\n        el[DATA_STYLE_DISPLAY] = el.style.display;\n    }\n    el.style.display = \"none\";\n};\n\n/**\n * Shows element by removing ``display: none`` and restoring the display value\n * to whatever it was before.\n *\n * @param {Node} el - The DOM node to show.\n */\nconst show = (el) => {\n    const val = el[DATA_STYLE_DISPLAY] || null;\n    el.style.display = val;\n    delete el[DATA_STYLE_DISPLAY];\n};\n\n/**\n * Return all direct parents of ``el`` matching ``selector``.\n * This matches against all parents but not the element itself.\n * The order of elements is from the search starting point up to higher\n * DOM levels.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - CSS selector to match against.\n * @returns {Array} - List of matching DOM nodes.\n */\nconst find_parents = (el, selector) => {\n    const ret = [];\n    let parent = el;\n    while (parent) {\n        parent = parent.parentNode?.closest?.(selector);\n        if (parent) ret.push(parent);\n    }\n    return ret;\n};\n\n/**\n * Find an element in the whole DOM tree if the selector is an ID selector,\n * otherwise use the given element as the starting point.\n *\n * @param {Node} el - The DOM node to start the search from.\n * @param {String} selector - The CSS selector to search for.\n *\n * @returns {NodeList} - The DOM nodes found.\n *\n */\nconst find_scoped = (el, selector) => {\n    // If the selector starts with an object id do a global search,\n    // otherwise do a local search.\n    return (selector.indexOf(\"#\") === 0 ? document : el).querySelectorAll(selector);\n};\n\n/**\n * Return all HTMLElement parents of el, starting from the direct parent of el.\n * The document itself is excluded because it's not a real DOM node.\n *\n * @param {Node} el - The DOM node to start the search from.\n *\n * @returns {Array} - The DOM nodes found.\n */\nconst get_parents = (el) => {\n    // Return all HTMLElement parents of el, starting from the direct parent of el.\n    const parents = [];\n    let parent = el?.parentNode;\n    while (parent) {\n        parents.push(parent);\n        parent = parent?.parentNode;\n        parent = parent instanceof HTMLElement ? parent : null;\n    }\n    return parents;\n};\n\n/**\n * Return the value of the first attribute found in the list of parents.\n *\n * @param {DOM element} el - The DOM element to start the acquisition search for the given attribute.\n * @param {string} attribute - Name of the attribute to search for.\n * @param {Boolean} include_empty - Also return empty values.\n * @param {Boolean} include_all - Return a list of attribute values found in all parents.\n *\n * @returns {*} - Returns the value of the searched attribute or a list of all attributes.\n */\nconst acquire_attribute = (\n    el,\n    attribute,\n    include_empty = false,\n    include_all = false\n) => {\n    let _el = el;\n    const ret = []; // array for ``include_all`` mode.\n    while (_el) {\n        const val = _el.getAttribute(attribute);\n        if (val || (include_empty && val === \"\")) {\n            if (!include_all) {\n                return val;\n            }\n            ret.push(val);\n        }\n        _el = _el.parentElement;\n    }\n    if (include_all) {\n        return ret;\n    }\n};\n\nconst is_visible = (el) => {\n    // Check, if element is visible in DOM.\n    // https://stackoverflow.com/a/19808107/1337474\n    return el.offsetWidth > 0 && el.offsetHeight > 0;\n};\n\n/**\n * Return a DocumentFragment from a given string.\n *\n * @param {String} string - The HTML structure as a string.\n *\n * @returns {DocumentFragment} - The DOM nodes as a DocumentFragment.\n */\nconst create_from_string = (string) => {\n    // See: https://davidwalsh.name/convert-html-stings-dom-nodes\n    return document.createRange().createContextualFragment(string.trim());\n};\n\n/**\n * Return a CSS property value for a given DOM node.\n * For length-values, relative values are converted to pixels.\n * Optionally parse as pixels, if applicable.\n *\n * Note: The element must be attached to the body to make CSS caluclations work.\n *\n * @param {Node} el - DOM node.\n * @param {String} property - CSS property to query on DOM node.\n * @param {Boolean} [as_pixels=false] - Convert value to pixels, if applicable.\n * @param {Boolean} [as_float=false] - Convert value to float, if applicable.\n *\n * @returns {(String|Number)} - The CSS value to return.\n */\nfunction get_css_value(el, property, as_pixels = false, as_float = false) {\n    let value = window.getComputedStyle(el).getPropertyValue(property);\n    if (as_pixels || as_float) {\n        value = parseFloat(value) || 0.0;\n    }\n    if (as_pixels && !as_float) {\n        value = parseInt(Math.round(value), 10);\n    }\n    return value;\n}\n\n/**\n * Find a scrollable element up in the DOM tree.\n *\n * Note: Setting the ``overflow`` shorthand property also sets the individual overflow-y and overflow-y properties.\n *\n * @param {Node} el - The DOM element to start the search on.\n * @param {String} [direction=] - Not given: Search for any scrollable element up in the DOM tree.\n *                                ``x``: Search for a horizontally scrollable element.\n *                                ``y``: Search for a vertically scrollable element.\n * @param {(DOM Node|null)} [fallback=document.body] - Fallback, if no scroll container can be found.\n *                                                     The default is to use document.body.\n *\n * @returns {Node} - Return the first scrollable element.\n *                   If no other element could be found, document.body would be returned.\n */\nconst find_scroll_container = (el, direction, fallback = document.body) => {\n    while (el && el !== document.body) {\n        if (!direction || direction === \"y\") {\n            let overflow_y = get_css_value(el, \"overflow-y\");\n            if ([\"auto\", \"scroll\"].includes(overflow_y)) {\n                return el;\n            }\n        }\n        if (!direction || direction === \"x\") {\n            let overflow_x = get_css_value(el, \"overflow-x\");\n            if ([\"auto\", \"scroll\"].includes(overflow_x)) {\n                return el;\n            }\n        }\n        el = el.parentElement;\n    }\n    return fallback;\n};\n\n/**\n * Get data stored directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node from which we want to retrieve the data.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param default_value {Any} - Optional default value.\n * @returns {Any} - The value which is stored on the DOM node.\n */\nconst get_data = (el, name, default_value) => {\n    return el[`${DATA_PREFIX}${name}`] || default_value;\n};\n\n/**\n * Set and store data directly on the node instance.\n * We are using a prefix to make sure the data doesn't collide with other attributes.\n *\n * @param el {Node} - The DOM node which we want to store the data on.\n * @param name {String} - The name of the variable. Note - this is stored on\n *                        the DOM node prefixed with the DATA_PREFIX.\n * @param value {Any} - The value we want to store on the DOM node.\n */\nconst set_data = (el, name, value) => {\n    el[`${DATA_PREFIX}${name}`] = value;\n};\n\n/**\n * Simple template engine, based on JS template literal\n *\n * Please note: You cannot pass a template literal as template_string.\n * JavaScript itself would try to expand it and would fail.\n *\n * See: https://stackoverflow.com/a/37217166/1337474\n *\n * @param {String} template_string - The template string as a JavaScript template literal.\n *                                   For each variable in the template you have to use ``this``.\n *                                   E.g. if you pass ``{message: \"ok\"}`` as template_variables, you can use it like so:\n *                                   `<h1>${this.message}</h1>`\n * @param {Object} template_variables - Object literal with all the variables which should be used in the template.\n *\n * @returns {String} - Returns the a string as template expanded with the template_variables.\n */\nconst template = (template_string, template_variables = {}) => {\n    return new Function(\"return `\" + template_string + \"`;\").call(template_variables);\n};\n\nconst dom = {\n    toNodeArray: toNodeArray,\n    querySelectorAllAndMe: querySelectorAllAndMe,\n    wrap: wrap,\n    hide: hide,\n    show: show,\n    find_parents: find_parents,\n    find_scoped: find_scoped,\n    get_parents: get_parents,\n    acquire_attribute: acquire_attribute,\n    is_visible: is_visible,\n    create_from_string: create_from_string,\n    get_css_value: get_css_value,\n    find_scroll_container: find_scroll_container,\n    get_data: get_data,\n    set_data: set_data,\n    template: template,\n    add_event_listener: events.add_event_listener, // BBB export. TODO: Remove in an upcoming version.\n    remove_event_listener: events.remove_event_listener, // BBB export. TODO: Remove in an upcoming version.\n};\n\nexport default dom;\n","// Event related methods and event factories\n\n// Event listener registration for easy-to-remove event listeners.\n// once Safari supports the ``signal`` option for addEventListener we can abort\n// event handlers by calling AbortController.abort().\nconst event_listener_map = {};\n\n/**\n * Add an event listener to a DOM element under a unique id.\n * If a event is registered under the same id for the same element, the old handler is removed first.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} event_type - The event type to listen for.\n * @param {string} id - A unique id under which the event is registered.\n * @param {function} cb - The event handler / callback function.\n * @param {Object} opts - Options for the addEventListener API.\n *\n */\nconst add_event_listener = (el, event_type, id, cb, opts = {}) => {\n    if (!el?.addEventListener) {\n        return; // nothing to do.\n    }\n    remove_event_listener(el, id); // do not register one listener twice.\n\n    if (!event_listener_map[el]) {\n        event_listener_map[el] = {};\n    }\n    event_listener_map[el][id] = [event_type, cb, opts.capture ? opts : undefined]; // prettier-ignore\n    el.addEventListener(event_type, cb, opts);\n};\n\n/**\n * Remove an event listener from a DOM element under a unique id.\n *\n * @param {DOM Node} el - The element to register the event for.\n * @param {string} id - A unique id under which the event is registered.\n *\n */\nconst remove_event_listener = (el, id) => {\n    if (!el?.removeEventListener) {\n        return; // nothing to do.\n    }\n    const el_events = event_listener_map[el];\n    if (!el_events) {\n        return;\n    }\n    let entries;\n    if (id) {\n        // remove event listener with specific id\n        const entry = el_events[id];\n        entries = entry ? [entry] : [];\n    } else {\n        // remove all event listeners of element\n        entries = Object.entries(el_events);\n    }\n    for (const entry of entries || []) {\n        el.removeEventListener(entry[0], entry[1], entry[2]);\n    }\n};\n\n/**\n * Await an event to be thrown.\n *\n * Usage:\n *     await events.await_event(button, \"click\");\n *\n * @param {DOM Node} el - The element to listen on.\n * @param {String} event_name - The event name to listen for.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_event = (el, event_name) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) =>\n        el.addEventListener(event_name, resolve, { once: true })\n    );\n};\n\n/**\n * Await pattern init.\n *\n * Usage:\n *     await events.await_pattern_init(PATTERN);\n *\n * @param {Pattern instance} pattern - The pattern instance.\n *\n * @returns {Promise} - Returns a Promise which can be used for ``await`` and which will be resolved when the event is throwm.\n *\n */\nconst await_pattern_init = (pattern) => {\n    // See: https://stackoverflow.com/a/44746691/1337474\n    return new Promise((resolve) => pattern.one(\"init\", resolve));\n};\n\n/**\n * Event factories\n */\n\nconst blur_event = () => {\n    return new Event(\"blur\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst click_event = () => {\n    return new Event(\"click\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst change_event = () => {\n    return new Event(\"change\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst focus_event = () => {\n    return new Event(\"focus\", {\n        bubbles: false,\n        cancelable: false,\n    });\n};\n\nconst input_event = () => {\n    return new Event(\"input\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst mousedown_event = () => {\n    return new Event(\"mousedown\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst mouseup_event = () => {\n    return new Event(\"mouseup\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nconst scroll_event = () => {\n    return new Event(\"scroll\", {\n        bubbles: true,\n        cancelable: false,\n    });\n};\n\nconst submit_event = () => {\n    return new Event(\"submit\", {\n        bubbles: true,\n        cancelable: true,\n    });\n};\n\nexport default {\n    add_event_listener: add_event_listener,\n    remove_event_listener: remove_event_listener,\n    await_event: await_event,\n    await_pattern_init: await_pattern_init,\n    blur_event: blur_event,\n    click_event: click_event,\n    change_event: change_event,\n    focus_event: focus_event,\n    input_event: input_event,\n    mousedown_event: mousedown_event,\n    mouseup_event: mouseup_event,\n    scroll_event: scroll_event,\n    submit_event: submit_event,\n};\n","/**\n * Patterns logging - minimal logging framework\n *\n * Copyright 2012 Simplon B.V.\n */\n\n// source: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n        if (typeof this !== \"function\") {\n            // closest thing possible to the ECMAScript 5 internal IsCallable function\n            throw new TypeError(\n                \"Function.prototype.bind - what is trying to be bound is not callable\"\n            );\n        }\n\n        var aArgs = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP = function () {},\n            fBound = function () {\n                return fToBind.apply(\n                    this instanceof fNOP && oThis ? this : oThis,\n                    aArgs.concat(Array.prototype.slice.call(arguments))\n                );\n            };\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n    };\n}\n\nvar root, // root logger instance\n    writer; // writer instance, used to output log entries\n\nvar Level = {\n    DEBUG: 10,\n    INFO: 20,\n    WARN: 30,\n    ERROR: 40,\n    FATAL: 50,\n};\n\nfunction ConsoleWriter() {}\n\nConsoleWriter.prototype = {\n    output: function (log_name, level, messages) {\n        if (log_name) messages.unshift(log_name + \":\");\n        if (level <= Level.DEBUG) {\n            // console.debug exists but is deprecated\n            messages.unshift(\"[DEBUG]\");\n            console.log.apply(console, messages);\n        } else if (level <= Level.INFO) console.info.apply(console, messages);\n        else if (level <= Level.WARN) console.warn.apply(console, messages);\n        else console.error.apply(console, messages);\n    },\n};\n\nfunction Logger(name, parent) {\n    this._loggers = {};\n    this.name = name || \"\";\n    this._parent = parent || null;\n    if (!parent) {\n        this._enabled = true;\n        this._level = Level.WARN;\n    }\n}\n\nLogger.prototype = {\n    getLogger: function (name) {\n        var path = name.split(\".\"),\n            root = this,\n            route = this.name ? [this.name] : [];\n        while (path.length) {\n            var entry = path.shift();\n            route.push(entry);\n            if (!(entry in root._loggers))\n                root._loggers[entry] = new Logger(route.join(\".\"), root);\n            root = root._loggers[entry];\n        }\n        return root;\n    },\n\n    _getFlag: function (flag) {\n        var context = this;\n        flag = \"_\" + flag;\n        while (context !== null) {\n            if (context[flag] !== undefined) return context[flag];\n            context = context._parent;\n        }\n        return null;\n    },\n\n    setEnabled: function (state) {\n        this._enabled = !!state;\n    },\n\n    isEnabled: function () {\n        this._getFlag(\"enabled\");\n    },\n\n    setLevel: function (level) {\n        if (typeof level === \"number\") this._level = level;\n        else if (typeof level === \"string\") {\n            level = level.toUpperCase();\n            if (level in Level) this._level = Level[level];\n        }\n    },\n\n    getLevel: function () {\n        return this._getFlag(\"level\");\n    },\n\n    log: function (level, messages) {\n        if (\n            !messages.length ||\n            !this._getFlag(\"enabled\") ||\n            level < this._getFlag(\"level\")\n        )\n            return;\n        messages = Array.prototype.slice.call(messages);\n        writer.output(this.name, level, messages);\n    },\n\n    debug: function () {\n        this.log(Level.DEBUG, arguments);\n    },\n\n    info: function () {\n        this.log(Level.INFO, arguments);\n    },\n\n    warn: function () {\n        this.log(Level.WARN, arguments);\n    },\n\n    error: function () {\n        this.log(Level.ERROR, arguments);\n    },\n\n    fatal: function () {\n        this.log(Level.FATAL, arguments);\n    },\n};\n\nfunction getWriter() {\n    return writer;\n}\n\nfunction setWriter(w) {\n    writer = w;\n}\n\nsetWriter(new ConsoleWriter());\n\nroot = new Logger();\n\nvar logconfig = /loglevel(|-[^=]+)=([^&]+)/g,\n    match;\n\nwhile ((match = logconfig.exec(window.location.search)) !== null) {\n    var logger = match[1] === \"\" ? root : root.getLogger(match[1].slice(1));\n    logger.setLevel(match[2].toUpperCase());\n}\n\nvar api = {\n    Level: Level,\n    getLogger: root.getLogger.bind(root),\n    setEnabled: root.setEnabled.bind(root),\n    isEnabled: root.isEnabled.bind(root),\n    setLevel: root.setLevel.bind(root),\n    getLevel: root.getLevel.bind(root),\n    debug: root.debug.bind(root),\n    info: root.info.bind(root),\n    warn: root.warn.bind(root),\n    error: root.error.bind(root),\n    fatal: root.fatal.bind(root),\n    getWriter: getWriter,\n    setWriter: setWriter,\n};\n\nexport default api;\n","/**\n * Patterns registry - Central registry and scan logic for patterns\n *\n * Copyright 2012-2013 Simplon B.V.\n * Copyright 2012-2013 Florian Friesdorf\n * Copyright 2013 Marko Durkovic\n * Copyright 2013 Rok Garbas\n * Copyright 2014-2015 Syslab.com GmBH, JC Brand\n */\n\n/*\n * changes to previous patterns.register/scan mechanism\n * - if you want initialised class, do it in init\n * - init returns set of elements actually initialised\n * - handle once within init\n * - no turnstile anymore\n * - set pattern.jquery_plugin if you want it\n */\nimport $ from \"jquery\";\nimport dom from \"./dom\";\nimport logging from \"./logging\";\nimport utils from \"./utils\";\n\nconst log = logging.getLogger(\"registry\");\nconst disable_re = /patterns-disable=([^&]+)/g;\nconst dont_catch_re = /patterns-dont-catch/g;\nconst disabled = {};\nlet dont_catch = false;\nlet match;\n\nwhile ((match = disable_re.exec(window.location.search)) !== null) {\n    disabled[match[1]] = true;\n    log.info(\"Pattern disabled via url config:\", match[1]);\n}\n\nwhile ((match = dont_catch_re.exec(window.location.search)) !== null) {\n    dont_catch = true;\n    log.info(\"I will not catch init exceptions\");\n}\n\n/**\n * Global pattern registry.\n *\n * This is a singleton and shared among any instance of the Patternslib\n * registry since Patternslib version 8.\n *\n * You normally don't need this as the registry handles it for you.\n */\nif (typeof window.__patternslib_registry === \"undefined\") {\n    window.__patternslib_registry = {};\n}\nexport const PATTERN_REGISTRY = window.__patternslib_registry;\nif (typeof window.__patternslib_registry_initialized === \"undefined\") {\n    window.__patternslib_registry_initialized = false;\n}\n\nconst registry = {\n    patterns: PATTERN_REGISTRY, // reference to global patterns registry\n    // as long as the registry is not initialized, pattern\n    // registration just registers a pattern. Once init is called,\n    // the DOM is scanned. After that registering a new pattern\n    // results in rescanning the DOM only for this pattern.\n    init() {\n        $(document).ready(function () {\n            if (window.__patternslib_registry_initialized) {\n                // Do not reinitialize a already initialized registry.\n                return;\n            }\n            window.__patternslib_registry_initialized = true;\n            log.debug(\"Loaded: \" + Object.keys(registry.patterns).sort().join(\", \"));\n            registry.scan(document.body);\n            log.debug(\"Finished initial scan.\");\n        });\n    },\n\n    clear() {\n        // Removes all patterns from the registry. Currently only being\n        // used in tests.\n        for (const name in registry.patterns) {\n            delete registry.patterns[name];\n        }\n    },\n\n    transformPattern(name, content) {\n        /* Call the transform method on the pattern with the given name, if\n         * it exists.\n         */\n        if (disabled[name]) {\n            log.debug(`Skipping disabled pattern: ${name}.`);\n            return;\n        }\n\n        const pattern = registry.patterns[name];\n        const transform = pattern.transform || pattern.prototype?.transform;\n        if (transform) {\n            try {\n                transform($(content));\n            } catch (e) {\n                if (dont_catch) {\n                    throw e;\n                }\n                log.error(`Transform error for pattern ${name}.`, e);\n            }\n        }\n    },\n\n    initPattern(name, el, trigger) {\n        /* Initialize the pattern with the provided name and in the context\n         * of the passed in DOM element.\n         */\n        const $el = $(el);\n        const pattern = registry.patterns[name];\n        if (pattern.init) {\n            const plog = logging.getLogger(`pat.${name}`);\n            if ($el.is(pattern.trigger)) {\n                plog.debug(\"Initialising.\", $el);\n                try {\n                    pattern.init($el, null, trigger);\n                    plog.debug(\"done.\");\n                } catch (e) {\n                    if (dont_catch) {\n                        throw e;\n                    }\n                    plog.error(\"Caught error:\", e);\n                }\n            }\n        }\n    },\n\n    orderPatterns(patterns) {\n        // Always add pat-validation as first pattern, so that it can prevent\n        // other patterns from reacting to submit events if form validation\n        // fails.\n        if (patterns.includes(\"validation\")) {\n            patterns.splice(patterns.indexOf(\"validation\"), 1);\n            patterns.unshift(\"validation\");\n        }\n        return patterns;\n    },\n\n    scan(content, patterns, trigger) {\n        if (!content) {\n            return;\n        }\n\n        if (typeof content === \"string\") {\n            content = document.querySelector(content);\n        } else if (content.jquery) {\n            content = content[0];\n        }\n\n        const selectors = [];\n        patterns = this.orderPatterns(patterns || Object.keys(registry.patterns));\n        for (const name of patterns) {\n            this.transformPattern(name, content);\n            const pattern = registry.patterns[name];\n            if (pattern.trigger) {\n                selectors.unshift(pattern.trigger);\n            }\n        }\n\n        let matches = dom.querySelectorAllAndMe(\n            content,\n            selectors.map((it) => it.trim().replace(/,$/, \"\")).join(\",\")\n        );\n        matches = matches.filter((el) => {\n            // Filter out patterns:\n            // - with class ``.disable-patterns``\n            // - wrapped in ``.disable-patterns`` elements\n            // - wrapped in ``<pre>`` elements\n            // - wrapped in ``<template>`` elements\n            return (\n                !el.matches(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\".disable-patterns\") &&\n                !el?.parentNode?.closest?.(\"pre\") &&\n                !el?.parentNode?.closest?.(\"template\") && // NOTE: not strictly necessary. Template is a DocumentFragment and not reachable except for IE.\n                !el.matches(\".cant-touch-this\") && // BBB. TODO: Remove with next major version.\n                !el?.parentNode?.closest?.(\".cant-touch-this\") // BBB. TODO: Remove with next major version.\n            );\n        });\n\n        // walk list backwards and initialize patterns inside-out.\n        for (const el of matches.reverse()) {\n            for (const name of patterns) {\n                this.initPattern(name, el, trigger);\n            }\n        }\n        document.body.classList.add(\"patterns-loaded\");\n    },\n\n    register(pattern, name) {\n        name = name || pattern.name;\n        if (!name) {\n            log.error(\"Pattern lacks a name.\", pattern);\n            return false;\n        }\n        if (registry.patterns[name]) {\n            log.debug(`Already have a pattern called ${name}.`);\n            return false;\n        }\n        // register pattern to be used for scanning new content\n        registry.patterns[name] = pattern;\n\n        // register pattern as jquery plugin\n        if (pattern.jquery_plugin) {\n            const plugin_name = (\"pat-\" + name).replace(\n                /-([a-zA-Z])/g,\n                function (match, p1) {\n                    return p1.toUpperCase();\n                }\n            );\n            $.fn[plugin_name] = utils.jqueryPlugin(pattern);\n            // BBB 2012-12-10 and also for Mockup patterns.\n            $.fn[plugin_name.replace(/^pat/, \"pattern\")] = $.fn[plugin_name];\n        }\n        log.debug(`Registered pattern ${name}`, pattern);\n        if (window.__patternslib_registry_initialized) {\n            // Once the first initialization has been done, do only scan for\n            // newly registered patterns.\n            registry.scan(document.body, [name]);\n            log.debug(`Re-scanned dom with newly registered pattern ${name}.`);\n        }\n        return true;\n    },\n};\n\nexport default registry;\n","import $ from \"jquery\";\nimport dom from \"./dom\";\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24; // Milliseconds per day.\n\n$.fn.safeClone = function () {\n    var $clone = this.clone();\n    // IE BUG : Placeholder text becomes actual value after deep clone on textarea\n    // https://connect.microsoft.com/IE/feedback/details/781612/placeholder-text-becomes-actual-value-after-deep-clone-on-textarea\n    if (window.document.documentMode) {\n        $clone.findInclusive(\":input[placeholder]\").each(function (i, item) {\n            var $item = $(item);\n            if ($item.attr(\"placeholder\") === $item.val()) {\n                $item.val(\"\");\n            }\n        });\n    }\n    return $clone;\n};\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.18\n// Reference: http://es5.github.io/#x15.4.4.18\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function (callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(\" this is null or not defined\");\n        }\n        // 1. Let O be the result of calling ToObject passing the |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get internal method of O with the argument \"length\".\n        // 3. Let len be ToUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If IsCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + \" is not a function\");\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //   This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty internal method of O with argument Pk.\n            //   This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as the this value and\n                // argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\nvar singleBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR EACH\n     * matched element in the DOM.\n     *\n     * This is how the Mockup-type patterns behave. They are constructor\n     * functions which need to be invoked once per jQuery-wrapped DOM node\n     * for all DOM nodes on which the pattern applies.\n     */\n    var $this = this;\n    $this.each(function () {\n        var pat,\n            $el = $(this);\n        pat = pattern.init($el, options);\n        if (method) {\n            if (pat[method] === undefined) {\n                $.error(\n                    \"Method \" + method + \" does not exist on jQuery.\" + pattern.name\n                );\n                return false;\n            }\n            if (method.charAt(0) === \"_\") {\n                $.error(\"Method \" + method + \" is private on jQuery.\" + pattern.name);\n                return false;\n            }\n            pat[method].apply(pat, [options]);\n        }\n    });\n    return $this;\n};\n\nvar pluralBoundJQueryPlugin = function (pattern, method, options) {\n    /* This is a jQuery plugin for patterns which are invoked ONCE FOR ALL\n     * matched elements in the DOM.\n     *\n     * This is how the vanilla Patternslib-type patterns behave. They are\n     * simple objects with an init method and this method gets called once\n     * with a list of jQuery-wrapped DOM nodes on which the pattern\n     * applies.\n     */\n    var $this = this;\n    if (method) {\n        if (pattern[method]) {\n            return pattern[method].apply($this, [$this].concat([options]));\n        } else {\n            $.error(\"Method \" + method + \" does not exist on jQuery.\" + pattern.name);\n        }\n    } else {\n        pattern.init.apply($this, [$this].concat([options]));\n    }\n    return $this;\n};\n\nvar jqueryPlugin = function (pattern) {\n    return function (method, options) {\n        var $this = this;\n        if ($this.length === 0) {\n            return $this;\n        }\n        if (typeof method === \"object\") {\n            options = method;\n            method = undefined;\n        }\n        if (typeof pattern === \"function\") {\n            return singleBoundJQueryPlugin.call(this, pattern, method, options);\n        } else {\n            return pluralBoundJQueryPlugin.call(this, pattern, method, options);\n        }\n    };\n};\n\n// Is a given variable an object?\nfunction isObject(obj) {\n    var type = typeof obj;\n    return type === \"function\" || (type === \"object\" && !!obj);\n}\n\n// Extend a given object with all the properties in passed-in object(s).\nfunction extend(obj) {\n    if (!isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n        source = arguments[i];\n        for (prop in source) {\n            if (hasOwnProperty.call(source, prop)) {\n                obj[prop] = source[prop];\n            }\n        }\n    }\n    return obj;\n}\n// END: Taken from Underscore.js until here.\n\nfunction findLabel(input) {\n    var $label;\n    for (\n        var label = input.parentNode;\n        label && label.nodeType !== 11;\n        label = label.parentNode\n    ) {\n        if (label.tagName === \"LABEL\") {\n            return label;\n        }\n    }\n    if (input.id) {\n        $label = $('label[for=\"' + input.id + '\"]');\n    }\n    if ($label && $label.length === 0 && input.form) {\n        $label = $('label[for=\"' + input.name + '\"]', input.form);\n    }\n    if ($label && $label.length) {\n        return $label[0];\n    } else {\n        return null;\n    }\n}\n\n// Taken from http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport\nfunction elementInViewport(el) {\n    var rect = el.getBoundingClientRect(),\n        docEl = document.documentElement,\n        vWidth = window.innerWidth || docEl.clientWidth,\n        vHeight = window.innerHeight || docEl.clientHeight;\n\n    if (rect.right < 0 || rect.bottom < 0 || rect.left > vWidth || rect.top > vHeight)\n        return false;\n    return true;\n}\n\n// Taken from http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escapeRegExp(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\n\n/**\n * Remove classes from a list of targets if they match a specific pattern.\n *\n * @param {Node, NodeList} targets: Dom Node or NodeList where the classes should be removed.\n * @param {string} classes: String matching classes to be removed.\n *                          You can add a \"*\" as wildcard to search for classes to be removed.\n *                          E.g. \"icon-*-alert\" to remove any of \"icon-1-alert icon-2-alert\".\n *\n * @returns {undefined}: This method directly operates on the targets.\n */\nfunction removeWildcardClass(targets, classes) {\n    targets = utils.ensureArray(targets);\n\n    if (classes.indexOf(\"*\") === -1) {\n        for (const target of targets) {\n            target.classList.remove(classes);\n        }\n    } else {\n        let matcher = classes.replace(/[\\-\\[\\]{}()+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n        matcher = matcher.replace(/[*]/g, \".*\");\n        matcher = new RegExp(\"^\" + matcher + \"$\");\n\n        for (const target of targets) {\n            const class_list = (target.getAttribute(\"class\") || \"\").split(/\\s+/);\n            if (!class_list.length) {\n                continue;\n            }\n            const ok = class_list.filter((it) => !matcher.test(it));\n            if (ok.length) {\n                target.setAttribute(\"class\", ok.join(\" \"));\n            } else {\n                target.removeAttribute(\"class\");\n            }\n        }\n    }\n}\n\nfunction hasValue(el) {\n    if (el.tagName === \"INPUT\") {\n        if (el.type === \"checkbox\" || el.type === \"radio\") {\n            return el.checked;\n        }\n        return el.value !== \"\";\n    }\n    if (el.tagName === \"SELECT\") {\n        return el.selectedIndex !== -1;\n    }\n    if (el.tagName === \"TEXTAREA\") {\n        return el.value !== \"\";\n    }\n    return false;\n}\n\nconst hideOrShow = (nodes, visible, options, pattern_name) => {\n    nodes = dom.toNodeArray(nodes);\n\n    const transitions = {\n        none: { hide: \"hide\", show: \"show\" },\n        fade: { hide: \"fadeOut\", show: \"fadeIn\" },\n        slide: { hide: \"slideUp\", show: \"slideDown\" },\n    };\n\n    const duration =\n        options.transition === \"css\" || options.transition === \"none\"\n            ? null\n            : options.effect.duration;\n\n    const on_complete = (el) => {\n        el.classList.remove(\"in-progress\");\n        el.classList.add(visible ? \"visible\" : \"hidden\");\n        $(el).trigger(\"pat-update\", {\n            pattern: pattern_name,\n            transition: \"complete\",\n        });\n    };\n\n    for (const el of nodes) {\n        el.classList.remove(\"visible\");\n        el.classList.remove(\"hidden\");\n        el.classList.remove(\"in-progress\");\n\n        if (duration) {\n            const t = transitions[options.transition];\n            el.classList.add(\"in-progress\");\n            $(el).trigger(\"pat-update\", {\n                pattern: pattern_name,\n                transition: \"start\",\n            });\n            $(el)[visible ? t.show : t.hide]({\n                duration: duration,\n                easing: options.effect.easing,\n                complete: () => on_complete(el),\n            });\n        } else {\n            if (options.transition !== \"css\") {\n                dom[visible ? \"show\" : \"hide\"](el);\n            }\n            on_complete(el);\n        }\n    }\n};\n\nfunction addURLQueryParameter(fullURL, param, value) {\n    /* Using a positive lookahead (?=\\=) to find the given parameter,\n     * preceded by a ? or &, and followed by a = with a value after\n     * than (using a non-greedy selector) and then followed by\n     * a & or the end of the string.\n     *\n     * Taken from http://stackoverflow.com/questions/7640270/adding-modify-query-string-get-variables-in-a-url-with-javascript\n     */\n    var val = new RegExp(\"(\\\\?|\\\\&)\" + param + \"=.*?(?=(&|$))\"),\n        parts = fullURL.toString().split(\"#\"),\n        url = parts[0],\n        hash = parts[1],\n        qstring = /\\?.+$/,\n        newURL = url;\n    // Check if the parameter exists\n    if (val.test(url)) {\n        // if it does, replace it, using the captured group\n        // to determine & or ? at the beginning\n        newURL = url.replace(val, \"$1\" + param + \"=\" + value);\n    } else if (qstring.test(url)) {\n        // otherwise, if there is a query string at all\n        // add the param to the end of it\n        newURL = url + \"&\" + param + \"=\" + value;\n    } else {\n        // if there's no query string, add one\n        newURL = url + \"?\" + param + \"=\" + value;\n    }\n    if (hash) {\n        newURL += \"#\" + hash;\n    }\n    return newURL;\n}\n\nfunction removeDuplicateObjects(objs) {\n    /* Given an array of objects, remove any duplicate objects which might\n     * be present.\n     */\n    const comparator = function (k, v) {\n        return this[k] === v;\n    };\n\n    return objs.reduce(function (list, next_obj) {\n        let is_duplicate = false;\n        for (const obj of list) {\n            is_duplicate =\n                Object.keys(obj).length === Object.keys(next_obj).length &&\n                Object.entries(obj).filter(\n                    (it) => !comparator.bind(next_obj)(it[0], it[1])\n                ).length === 0;\n        }\n        if (!is_duplicate) {\n            list.push(next_obj);\n        }\n        return list;\n    }, []);\n}\n\nfunction mergeStack(stack, length) {\n    /* Given a list of lists of objects (which for brevity we call a stack),\n     * return a list of objects where each object is the merge of all the\n     * corresponding original objects at that particular index.\n     *\n     * If a certain sub-list doesn't have an object at that particular\n     * index, the last object in that list is merged.\n     */\n    const results = [];\n    for (let i = 0; i < length; i++) {\n        results.push({});\n    }\n    for (const frame of stack) {\n        const frame_length = frame.length - 1;\n        for (let x = 0; x < length; x++) {\n            results[x] = $.extend(\n                results[x] || {},\n                frame[x > frame_length ? frame_length : x]\n            );\n        }\n    }\n    return results;\n}\n\nfunction isElementInViewport(el, partial = false, offset = 0) {\n    /* returns true if element is visible to the user ie. is in the viewport.\n     * Setting partial parameter to true, will only check if a part of the element is visible\n     * in the viewport, specifically that some part of that element is touching the top part\n     * of the viewport. This only applies to the vertical direction, ie. doesnt check partial\n     * visibility for horizontal scrolling\n     * some code taken from:\n     * http://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433\n     */\n    if (el instanceof $) {\n        el = el[0];\n    }\n\n    const rec = el.getBoundingClientRect();\n    const rec_values = [rec.top, rec.bottom, rec.left, rec.right];\n\n    if (rec_values.every((val) => val === 0)) {\n        // if every property of rec is 0, the element is invisible;\n        return false;\n    } else if (partial) {\n        // when using getBoundingClientRect() (in the vertical case)\n        // negative means above top of viewport, positive means below top of viewport\n        // therefore for part of the element to be touching or crossing the top of the viewport\n        // rec.top must <= 0 and rec.bottom must >= 0\n        // an optional tolerance offset can be added for when the desired element is not exactly\n        // toucing the top of the viewport but needs to be considered as touching.\n        return (\n            rec.top <= 0 + offset && rec.bottom >= 0 + offset\n            //(rec.top >= 0+offset && rec.top <= window.innerHeight) // this checks if the element\n            // touches bottom part of viewport\n            // XXX do we want to include a check for the padding of an element?\n            // using window.getComputedStyle(target).paddingTop\n        );\n    } else {\n        // this will return true if the entire element is completely in the viewport\n        return (\n            rec.top >= 0 &&\n            rec.left >= 0 &&\n            rec.bottom <=\n                (window.innerHeight || document.documentElement.clientHeight) &&\n            rec.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n}\n\n/* parseTime - Parse a duration from a string and return the parsed time in milliseconds.\n *\n * @param {String} time - A duration/time string like ``1ms``, ``1s`` or ``1m``.\n *\n * @returns {Number} - A integer which represents the parsed time in milliseconds.\n */\nfunction parseTime(time) {\n    var m = /^(\\d+(?:\\.\\d+)?)\\s*(\\w*)/.exec(time);\n    if (!m) {\n        throw new Error(\"Invalid time\");\n    }\n    var amount = parseFloat(m[1]);\n    switch (m[2]) {\n        case \"s\":\n            return Math.round(amount * 1000);\n        case \"m\":\n            return Math.round(amount * 1000 * 60);\n        case \"ms\":\n        default:\n            return Math.round(amount);\n    }\n}\n\n// Return a jQuery object with elements related to an input element.\nfunction findRelatives(el) {\n    var $el = $(el),\n        $relatives = $(el),\n        $label = $();\n\n    $relatives = $relatives.add($el.closest(\"label\"));\n    $relatives = $relatives.add($el.closest(\"fieldset\"));\n\n    if (el.id) $label = $(\"label[for='\" + el.id + \"']\");\n    if (!$label.length) {\n        var $form = $el.closest(\"form\");\n        if (!$form.length) $form = $(document.body);\n        $label = $form.find(\"label[for='\" + el.name + \"']\");\n    }\n    $relatives = $relatives.add($label);\n    return $relatives;\n}\n\nfunction get_bounds(el) {\n    // Return bounds of an element with it's values rounded and converted to ints.\n    const bounds = el.getBoundingClientRect();\n    return {\n        x: parseInt(Math.round(bounds.x), 10) || 0,\n        y: parseInt(Math.round(bounds.y), 10) || 0,\n        top: parseInt(Math.round(bounds.top), 10) || 0,\n        bottom: parseInt(Math.round(bounds.bottom), 10) || 0,\n        left: parseInt(Math.round(bounds.left), 10) || 0,\n        right: parseInt(Math.round(bounds.right), 10) || 0,\n        width: parseInt(Math.round(bounds.width), 10) || 0,\n        height: parseInt(Math.round(bounds.height), 10) || 0,\n    };\n}\n\nfunction checkInputSupport(type, invalid_value) {\n    /* Check input type support.\n     *  See: https://stackoverflow.com/a/10199306/1337474\n     */\n    let support = false;\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", type);\n    support = input.type == type;\n\n    if (invalid_value !== undefined) {\n        // Check for input type UI support\n        input.setAttribute(\"value\", invalid_value);\n        support = input.value !== invalid_value;\n    }\n    return support;\n}\n\nconst checkCSSFeature = (attribute, value, tag = \"div\") => {\n    /* Check for browser support of specific CSS feature.\n     */\n    tag = document.createElement(tag);\n    let supported = tag.style[attribute] !== undefined;\n    if (supported && value !== undefined) {\n        tag.style[attribute] = value;\n        supported = tag.style[attribute] === value;\n    }\n    return supported;\n};\n\nconst animation_frame = () => {\n    // Return promise to await next repaint cycle\n    // Use it in your async function like so: ``await utils.animation_frame()``\n    // From: http://www.albertlobo.com/fractals/async-await-requestanimationframe-buddhabrot\n    return new Promise(window.requestAnimationFrame);\n};\n\nconst timeout = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nconst debounce = (func, ms, timer = { timer: null }) => {\n    // Returns a function, that, as long as it continues to be invoked, will not\n    // be triggered. The function will be called after it stops being called for\n    // N milliseconds.\n    // From: https://underscorejs.org/#debounce\n    //\n    // Make sure to initialize ``debounce`` only once per to-be-debounced\n    // function to not reinitialize the timer each time and debounce not being\n    // able to cancel previouse runs.\n    //\n    // Pass a module-global timer as an object ``{ timer: null }`` if you want\n    // to also cancel debounced functions from other pattern-invocations.\n    //\n    return function () {\n        clearTimeout(timer.timer);\n        const args = arguments;\n        timer.timer = setTimeout(() => func.apply(this, args), ms);\n    };\n};\n\nconst isIE = () => {\n    // See: https://stackoverflow.com/a/9851769/1337474\n    // Internet Explorer 6-11\n    return /*@cc_on!@*/ false || !!document.documentMode;\n};\n\nconst jqToNode = (el) => {\n    // Return a DOM node if a jQuery node was passed.\n    if (el.jquery) {\n        el = el[0];\n    }\n    return el;\n};\n\n/**\n * Always return an iterable object.\n *\n * @param {any} it: The object which needs to be wrapped in an array or returned as is if it is iterable.\n * @param {boolean} force_array: If the object is iterable but not an Array, convert it to an array (e.g. For jQuery items or NodeList objects).\n *\n * @returns {Array}: Returns the object wrapped in an Array, expanded to an Array or as-is if it is already iterable.\n */\nconst ensureArray = (it, force_array) => {\n    // Ensure to return always an array\n    const array_like = !!(\n        NodeList.prototype.isPrototypeOf(it) || // eslint-disable-line no-prototype-builtins\n        Array.isArray(it) ||\n        it.jquery\n    );\n    return array_like ? (force_array ? [...it] : it) : [it];\n};\n\nconst localized_isodate = (date) => {\n    // Return a iso date (date only) in the current timezone instead of a\n    // UTC ISO 8601 date+time component which toISOString returns.\n\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const year = date.getFullYear().toString();\n\n    return `${year}-${month}-${day}`;\n};\n\n/**\n * Replace HTML reserved characters with html entities to add HTML for user\n * editing to e.g. a textarea or a contenteditable.\n *\n * See: https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} html - The HTML string to encode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&`` will be replaced with ``&amp;``.\n *                     ``<`` will be repalced with ``&lt;``,\n *                     ``>`` will be replaced with ``&gt;``,\n *                     ``\"`` will be replaced with ``&quot;``.\n */\nconst escape_html = (html) => {\n    return (html || \"\")\n        .replace(/&/g, \"&amp;\") // needs to be first!\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\");\n};\n\n/**\n * Return unescaped, raw HTML from an escaped HTML  string.\n *\n * See: https://developer.mozilla.org/en-US/docs/Glossary/Entity#reserved_characters\n *\n * @param {string} escaped_html - The HTML string to decode.\n *\n * @returns {string} - Returns the escaped html string:\n *                     ``&amp;`` will be replaced with ``&``,\n *                     ``&lt;`` will be repalced with ``<``,\n *                     ``&gt;`` will be replaced with ``>``,\n *                     ``&quot;`` will be replaced with ``\"``.\n */\nconst unescape_html = (escaped_html) => {\n    return (escaped_html || \"\")\n        .replace(/&amp;/g, \"&\")\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&quot;/g, '\"');\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date/time string with or without an optional time component.\n *\n * @param {String} value - The date/time value to be checked.\n * @param {Boolean} [optional_time=false] - True, if time component is optional.\n * @return {Boolean} - True, if the given value is a valid Date string. False if not.\n */\nconst is_iso_date_time = (value, optional_time = false) => {\n    const re_date_time = optional_time\n        ? /^\\d{4}-[01]\\d-[0-3]\\d(T[0-2]\\d:[0-5]\\d)?$/\n        : /^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return true, if the given value is a valid ISO 8601 date string and without a time component.\n *\n * @param {String} value - The date value to be checked.\n * @return {Boolean} - True, if the given value is a valid ISO 8601 date string without a time component. False if not.\n */\nconst is_iso_date = (value) => {\n    const re_date_time = /^\\d{4}-[01]\\d-[0-3]\\d$/;\n    return re_date_time.test(value);\n};\n\n/**\n * Return the number of days between two dates.\n * Based on: https://stackoverflow.com/a/15289883/1337474\n *\n * @param {Date} date_1 - First date to compare. We will substract date_2 from date_1.\n * @param {Date} date_2 - Second date to compare.\n * @return {Number} - The number of days between the two dates.\n */\nconst date_diff = (date_1, date_2) => {\n    // Discard the time and time-zone information.\n    const utc_1 = Date.UTC(date_1.getFullYear(), date_1.getMonth(), date_1.getDate());\n    const utc_2 = Date.UTC(date_2.getFullYear(), date_2.getMonth(), date_2.getDate());\n\n    return Math.floor((utc_1 - utc_2) / _MS_PER_DAY);\n};\n\nvar utils = {\n    // pattern pimping - own module?\n    jqueryPlugin: jqueryPlugin,\n    escapeRegExp: escapeRegExp,\n    isObject: isObject,\n    extend: extend,\n    findLabel: findLabel,\n    elementInViewport: elementInViewport,\n    removeWildcardClass: removeWildcardClass,\n    hideOrShow: hideOrShow,\n    addURLQueryParameter: addURLQueryParameter,\n    removeDuplicateObjects: removeDuplicateObjects,\n    mergeStack: mergeStack,\n    isElementInViewport: isElementInViewport,\n    hasValue: hasValue,\n    parseTime: parseTime,\n    findRelatives: findRelatives,\n    get_bounds: get_bounds,\n    checkInputSupport: checkInputSupport,\n    checkCSSFeature: checkCSSFeature,\n    animation_frame: animation_frame,\n    timeout: timeout,\n    debounce: debounce,\n    isIE: isIE,\n    jqToNode: jqToNode,\n    ensureArray: ensureArray,\n    localized_isodate: localized_isodate,\n    escape_html: escape_html,\n    unescape_html: unescape_html,\n    is_iso_date_time: is_iso_date_time,\n    is_iso_date: is_iso_date,\n    date_diff: date_diff,\n    getCSSValue: dom.get_css_value, // BBB: moved to dom. TODO: Remove in upcoming version.\n};\n\nexport default utils;\n"],"names":["getOptions","$el","patternName","options","length","$","this","parent","elOptions","data","tmpOptions","split","i","item","reverse","key","pop","replace","value","join","log","logging","initBasePattern","trigger","jquery","name","prototype","plog","pattern","undefined","Registry","parser","mockupParser","e","error","Base","async","el","defaults","init","emit","warn","constructor","on","eventName","eventCallback","one","args","extend","patternProps","child","Error","Object","hasOwnProperty","call","apply","arguments","jquery_plugin","Surrogate","__super__","autoregister","ArgumentParser","order","parameters","attribute","enum_values","enum_conflicts","groups","possible_groups","group_pattern","json_param_pattern","named_param_pattern","token_pattern","_camelCase","str","__","p1","toUpperCase","addAlias","alias","original","addGroupToSpec","spec","m","match","group","field","first_spec","first_name","dest","addArgument","choices","multiple","addJSONArgument","default_value","push","type","Array","isArray","_typeof","choice","indexOf","slice","obj","_coerce","JSON","parse","toLowerCase","num","parseInt","isNaN","toString","_set","opts","debug","parts","part","v","trim","_split","text","tokens","quoted","simple","_parseExtendedNotation","argstring","map","RegExp","matches","arg","values","filter","it","subopt","_parseShorthandNotation","parameter","shift","sense","flag","positional","unshift","_parse","sep","extended","_defaults","result","_cleanupOptions","group_options","keys","target","inherit","stack","$possible_config_providers","final_length","hasClass","parents","addBack","provider","frame","attr","bind","Math","max","results","utils","current_value","add_argument","Parser","id","title","L","default","LMarkerClusterGroup","MarkerClusterGroup","fitBoundsOptions","maxZoom","zoom","padding","boundsPadding","main_marker","fullscreenControl","fullscreencontrol","zoomControl","zoomcontrol","sleep","sleepNote","hoverToWake","sleepOpacity","marker_cluster","maxClusterRadius","original_event","Icon","Default","imagePath","image_path","locatecontrol","autolocate","control","locate","addTo","start","map_layers","baseLayers","layer","tileLayer","layers","default_map_layer","setView","latitude","longitude","geojson_ajaxurl","response","fetch","json","init_geojson","info","dataset","geojson","geosearch","GeoSearchControl","SearchProvider","geosearch_provider","EsriProvider","GoogleProvider","BingProvider","OpenStreetMapProvider","showMarker","addControl","latlng","lat","location","y","lng","x","feature","properties","editable","removeLayer","setLatLng","update","addLayer","marker","setIcon","create_marker","bind_popup","popup","label","fitBounds","addmarker","add_marker_callback","Control","SimpleMarkers","delete_control","allow_popup","marker_icon","marker_draggable","minimap","MiniMap","toggleDisplay","mapOptions","bounds","marker_layer","geoJson","pointToLayer","extraClasses","markerColor","color","main","Marker","icon","draggable","input_lat","document","querySelector","latinput","input_lng","lnginput","getLatLng","events","getBounds","onEachFeature","no_delete","popup_el","createElement","innerHTML","addEventListener","preventDefault","bindPopup","AwesomeMarkers","prefix","DATA_PREFIX","DATA_STYLE_DISPLAY","get_css_value","property","as_pixels","as_float","window","getComputedStyle","getPropertyValue","parseFloat","round","toNodeArray","nodes","NodeList","querySelectorAllAndMe","selector","all","querySelectorAll","wrap","wrapper","parentNode","insertBefore","appendChild","hide","style","display","show","val","find_parents","ret","closest","find_scoped","get_parents","HTMLElement","acquire_attribute","include_empty","include_all","_el","getAttribute","parentElement","is_visible","offsetWidth","offsetHeight","create_from_string","string","createRange","createContextualFragment","find_scroll_container","direction","fallback","body","overflow_y","includes","overflow_x","get_data","set_data","template","template_string","template_variables","Function","add_event_listener","remove_event_listener","event_listener_map","removeEventListener","el_events","entries","entry","event_type","cb","capture","await_event","event_name","Promise","resolve","once","await_pattern_init","blur_event","Event","bubbles","cancelable","click_event","change_event","focus_event","input_event","mousedown_event","mouseup_event","scroll_event","submit_event","root","writer","oThis","TypeError","aArgs","fToBind","fNOP","fBound","concat","Level","DEBUG","INFO","WARN","ERROR","FATAL","ConsoleWriter","Logger","_loggers","_parent","_enabled","_level","setWriter","w","output","log_name","level","messages","console","getLogger","path","route","_getFlag","context","setEnabled","state","isEnabled","setLevel","getLevel","fatal","logconfig","exec","search","getWriter","disable_re","dont_catch_re","disabled","dont_catch","__patternslib_registry","PATTERN_REGISTRY","__patternslib_registry_initialized","registry","patterns","ready","sort","scan","clear","transformPattern","content","transform","initPattern","is","orderPatterns","splice","selectors","dom","classList","add","register","plugin_name","$clone","clone","documentMode","findInclusive","each","$item","forEach","callback","thisArg","T","k","O","len","kValue","singleBoundJQueryPlugin","method","pat","charAt","pluralBoundJQueryPlugin","$this","isObject","jqueryPlugin","escapeRegExp","source","prop","findLabel","input","$label","nodeType","tagName","form","elementInViewport","rect","getBoundingClientRect","docEl","documentElement","vWidth","innerWidth","clientWidth","vHeight","innerHeight","clientHeight","right","bottom","left","top","removeWildcardClass","targets","classes","ensureArray","remove","matcher","class_list","ok","test","setAttribute","removeAttribute","hideOrShow","visible","pattern_name","transitions","none","fade","slide","duration","transition","effect","on_complete","t","easing","complete","addURLQueryParameter","fullURL","param","url","hash","newURL","removeDuplicateObjects","objs","comparator","reduce","list","next_obj","is_duplicate","mergeStack","frame_length","isElementInViewport","partial","offset","rec","every","hasValue","checked","selectedIndex","parseTime","time","amount","findRelatives","$relatives","$form","find","get_bounds","width","height","checkInputSupport","invalid_value","support","checkCSSFeature","tag","supported","animation_frame","requestAnimationFrame","timeout","ms","setTimeout","debounce","func","timer","clearTimeout","isIE","jqToNode","force_array","isPrototypeOf","localized_isodate","date","day","getDate","padStart","month","getMonth","getFullYear","escape_html","html","unescape_html","escaped_html","is_iso_date_time","optional_time","is_iso_date","date_diff","date_1","date_2","utc_1","Date","UTC","utc_2","floor","getCSSValue"],"sourceRoot":""}